{"version":3,"sources":["page/ButtonTest.js","page/MaterialTable.js","page/TreeViewExample.js","page/TreeViewExample2.js","page/FileUI.js","page/FileBrowser.js","page/MyAutoComplete.js","page/LoadingBar.js","page/ToastEditor.js","page/HandsontableToggleButton.js","page/CustomHansOnTable.js","page/MyHandsonTable.js","page/MyTextEditorToggleButton.js","page/ReactComments.js","actions/loginAction.js","page/GitHubLoginCallback.js","cookielibrary.js","githublibrary.js","page/ReactCookie.js","page/IPConverter.js","page/ReactImageList.js","page/Capture.js","page/SimpleToastEditor.js","page/MyStepper.js","App.js","reportWebVitals.js","InitScrollTop.js","LoginStatus.js","reducer/loginReducers.js","reducer/rootReducer.js","store/store.js","index.js"],"names":["ButtonTest","React","createElement","Stack","direction","spacing","IconButton","aria-label","DeleteIcon","color","WcIcon","Button","sx","m","borderColor",":hover","variant","startIcon","data","name","firstName","lastName","address","city","state","MaterialTable","columns","accessorKey","header","size","Cell","_ref","renderedCellValue","row","_valuesCache","style","_ref2","_useState","useState","map","c","_useState2","_slicedToArray","columnOrder","setColumnOrder","MaterialReactTable","muiTableHeadCellProps","backgroundColor","BorderStyle","borderWidth","muiTablePaperProps","elevation","margin","width","border","muiTableBodyProps","& tr:nth-of-type(odd)","initialState","item","localStorage","getItem","JSON","parse","enableColumnPinning","enableColumnOrdering","onColumnOrderChange","value","console","log","setItem","stringify","_toConsumableArray","MyTreeItem","withStyles","root","&.MuiTreeItem-root > .MuiTreeItem-content:hover","background","&.MuiTreeItem-root > .MuiTreeItem-content:hover > .MuiTreeItem-label","&.MuiTreeItem-root > .Mui-selected","@media (hover: none)","TreeItem","TreeViewExample","TreeView","defaultCollapseIcon","ExpandMoreIcon","defaultExpandIcon","ChevronRightIcon","disabledItemsFocusable","height","flexGrow","maxWidth","overflowY","nodeId","label","onClick","e","target","innerText","disabled","localData","child","TreeViewExample2","treeInfo","setTreeInfo","_React$useState","_React$useState2","expanded","setExpanded","_React$useState3","_React$useState4","selected","setSelected","useEffect","Box","mb","fullExpanded","i","push","toString","oldExpanded","length","oldSelected","onNodeToggle","event","nodeIds","onNodeSelect","makeTreeItem","info","parent","undefined","idx","key","concat","getFileName","path","spt","split","download","pathInfo","fileName","includes","axios","get","responseType","then","res","response","url","window","URL","createObjectURL","Blob","type","headers","link","document","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","downloadPC","catch","error","getFileBrowser","idMap","tvfunc","tmp","tmpPath","makeExpandedView","fetch","json","sortFileUI","findPath","FileUI","display","textAlign","cursor","verticalAlign","onDoubleClick","TextSnippetIcon","fontSize","FolderIcon","left","DataObjectICON","getMuiIcon","wordBreak","FileBrowser","_useState3","_useState4","fileUi","setFileUI","_useState5","_useState6","setIdMap","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","id","setId","_useState13","_useState14","setValue","_useState15","_useState16","dirList","setDirList","treeFocus","useRef","makeDirectories","directories","_step","tmpTreeInfo","tmpIdMap","_iterator","_createForOfIteratorHelper","_loop","d","len","current","_loop2","arr","findIndex","find","s","n","done","err","f","isFile","dir","filter","val","files","sort","getFilesForFileBrowser","substring","method","setTimeout","parseInt","focus","clickTime","Date","defaultProps","options","getOptionLabel","option","marginLeft","paddingBottom","Autocomplete","Object","assign","autoComplete","includeInputInList","onChange","newValue","renderInput","params","TextField","gridTemplateColumns","gridGap","ids","className","diff","getTime","overflowX","ref","borderRight","top100Films","title","year","MyAutoComplete","multipleValue","setMultipleValue","top100Films10Year","year10","_objectSpread","a","b","groupBy","filterOptions","list","input","inputValue","myFilter","multiple","filterSelectedOptions","placeholder","util","require","str","inspect","LoadingBar","open","setOpen","Promise","resolve","reject","Modal","aria-labelledby","aria-describedby","position","top","transform","bgcolor","justifyContent","alignItems","CircularProgress","colorSyntaxOptions","preset","ToastEditor","editorRef","editMode","setEditMode","initData","viewer","Viewer","el","querySelector","usageStatistics","plugins","tableMergedCell","setMarkdown","getInstance","markDownContent","getMarkdown","Editor","previewStyle","initialEditType","toolbarItems","colorSyntax","StyledToggleButtonGroup","styled","ToggleButtonGroup","theme","& .MuiToggleButtonGroup-grouped","&.Mui-disabled","&:not(:first-of-type)","borderRadius","shape","&:first-of-type","HandsontableToggleButton","myHandsOnTable","selectedCell","horizontalAlignment","setHorizontalAlignment","verticalAlignment","setVerticalAlignment","formats","setFormats","showCompactPicker","setShowCompactPicker","pickerPosition","setPickerPosition","fontColor","setFontColor","bgColor","setBgColor","getCellInfoRange","selecetedRangeCells","getSelectedRange","cellPositions","cell","r","from","to","col","getHorizontalStatus","status","getVerticalStatus","handleAlignment","newAlignment","_step2","_iterator2","pos","cellInfo","getCell","horizontal","vertical","join","handleToggleCompactPicker","rect","currentTarget","getBoundingClientRect","pickerTop","bottom","scrollY","pickerLeft","scrollX","prev","handleChangeComplete","colorType","hex","_step4","_iterator4","setButtonState","baseCell","getCellInfoBase","fontWeight","fontStyle","textDecoration","marginBottom","Paper","palette","divider","flexWrap","exclusive","alignment","ToggleButton","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","VerticalAlignTopIcon","VerticalAlignCenterIcon","VerticalAlignBottomIcon","Divider","flexItem","orientation","mx","my","newFormats","_step3","_iterator3","deco","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FormatStrikethroughIcon","ColorizeIcon","ArrowDropDownIcon","FormatColorFillIcon","zIndex","right","fms","CompactPicker","onChangeComplete","getColorPicker","DisplayCellStyle","div","_templateObject","_taggedTemplateLiteral","CustomHansOnTable","_options","myTable","myOptions","setMyHandsOnTable","displayCellInfo","setDisplaySetInfo","setSelectedCell","getComments","comments","getMergeCells","mergeCells","localCellStyle","colHeaders","rowHeaders","wordWrap","manualColumnResize","manualRowResize","manualColumnMove","manualRowMove","allowInsertColumn","allowInsertRow","allowRemoveColumn","allowRemoveRow","autoWrapCol","autoWrapRow","dragToScroll","persistentState","outsideClickDeselects","readOnly","enterBeginsEditing","copyable","copyPaste","undo","trimWhitespace","contextMenu","manualColumnFreeze","observeChanges","afterChangesObserved","startCols","startRows","afterSelection","selectedLast","getSelectedLast","getValue","colWidths","rowHeights","_defineProperty","displayDelay","obj","temp","comment","cellRange","auto","prop","cellProperties","renderer","instance","td","Handsontable","renderers","TextRenderer","apply","this","arguments","setColWidths","table","setOptions","colLength","getData","widths","getColWidth","setRowHeights","rowLength","heights","getRowHeight","container","getElementById","innerHTML","trueFalseOptions","numberOptions","addHook","mergeParent","getCellMeta","spanned","localOptions","Array","isArray","render","makeTable","changeFormat","replace","csv","encodedUri","encodeURI","marginTop","myDefaultOptions","maxCols","maxRows","minCols","minRows","minSpareRows","minSpareCols","fixedColumnsLeft","fixedRowsTop","fixedRowsBottom","rowHeaderWidth","MyHandsonTable","setMyOptions","setState","toggleDrawer","anchor","makeTrueFalseCheckBox","pair","entries","Boolean","FormControlLabel","control","Checkbox","checked","changeTrueFalseOptions","makeNumberInput","Number","FormControl","InputLabel","htmlFor","Input","isNaN","changeNumberOptions","initLocalStorage","Fragment","Drawer","onClose","flexDirection","FormHelperText","MyTextEditorToggleButton","ReactComments","CommentSection","currentUser","currentUserId","currentUserImg","currentUserProfile","currentUserFullName","logIn","loginLink","signupLink","commentData","userId","comId","fullName","userProfile","text","avatarUrl","replies","currentData","onSubmitAction","hrStyle","inputStyle","formStyle","submitBtnStyle","padding","cancelBtnStyle","replyInputStyle","borderBottom","advancedInput","removeEmoji","customNoComment","login","loginInfo","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","result","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","GitHubLoginCallback","navigate","useNavigate","dispatch","useDispatch","getAccessToken","_asyncToGenerator","_callee","code","accessInfo","token","userResponse","userData","loginID","_context","process","Authorization","avatar_url","actions","t0","_x","queryString","location","search","getCode","cookies","Cookies","getCookies","loginCheck","_ref5","_callee5","setLoginStatus","_context5","ck","_x6","ReactCookie","_useCookies","useCookies","_useCookies2","setCookie","removeCookie","githubToken","setToken","storedToken","test","defaults","withCredentials","post","profile","username","password","maxAge","isValidIPv6","ipv6","integerToIpv4","integer","ipv4ToInteger","ipv4","parts","match","octet","isValidIPv4","octets","Math","pow","integerToIpv6","BigInt","maxValue","hexString","ipv6ToInteger","String","ipv6LongToShort","blocks","IPConverter","ipv6_short","ipv6_long","setInfo","changeIpv6Short","ipv6Long","isValidIPv6Short","index","indexOf","splice","fill","block","ipv6ShortToLong","bigInteger","component","noValidate","focused","changeInteger","changeIpv4","changeIpv6Long","clip","clipPath","overflow","whiteSpace","o","allowArrayLike","it","minLen","_arrayLikeToArray","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","_e2","arr2","Capture","quadrant","setQuadrant","images","setImages","handleImagePaste","clipboardItems","_context2","navigator","clipboard","read","blob","reader","types","getType","FileReader","onload","prevImages","newImages","readAsDataURL","t1","t2","gridTemplateRows","area","onPaste","src","steps","MyStepper","activeStep","setActiveStep","failedStep","setFailedStep","tempDelay","time","_x2","startProgress","_callee2","Stepper","labelProps","optional","Typography","Step","StepLabel","App","loginStatus","setCurrentUser","titleUpdator","initialTitle","setTitle","useTitle","gh","Link","Routes","Route","element","GitHubLoginCallBack","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","InitScrollTop","pathname","useLocation","scrollTo","LoginStatus","check","action","rootReducer","combineReducers","store","createStore","ReactDOM","createRoot","BrowserRouter","basename","Provider"],"mappings":"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","file":"static/js/main.d8a23828.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport WcIcon from \"@mui/icons-material/Wc\";\r\n\r\nconst ButtonTest = () => {\r\n  return (\r\n    <div>\r\n      <Stack direction=\"row\" spacing={1}>\r\n        <IconButton aria-label=\"delete\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"delete\" color=\"primary\">\r\n          <WcIcon>화장실</WcIcon>\r\n        </IconButton>\r\n        <Button\r\n          sx={{\r\n            m: 1,\r\n            color: \"red\",\r\n            borderColor: \"pink\",\r\n            \":hover\": { borderColor: \"red\" },\r\n          }}\r\n          variant=\"outlined\"\r\n          startIcon={<WcIcon />}\r\n        >\r\n          화장실\r\n        </Button>\r\n      </Stack>\r\n      <Button\r\n        sx={{\r\n          m: 1,\r\n          color: \"black\",\r\n          borderColor: \"gray\",\r\n          \":hover\": { borderColor: \"black\" },\r\n        }}\r\n        variant=\"outlined\"\r\n      >\r\n        Custom Button\r\n      </Button>\r\n      <Button\r\n        sx={{\r\n          m: 1,\r\n          color: \"black\",\r\n          borderColor: \"gray\",\r\n          \":hover\": { borderColor: \"black\" },\r\n        }}\r\n        variant=\"outlined\"\r\n        //startIcon={<MapIcon/>}\r\n      >\r\n        Custom Button\r\n      </Button>\r\n      <Stack sx={{ m: 1 }} spacing={2} direction=\"row\">\r\n        <Button variant=\"text\" color=\"primary\">\r\n          Primary\r\n        </Button>\r\n        <Button variant=\"text\" color=\"secondary\">\r\n          Secondary\r\n        </Button>\r\n        <Button variant=\"text\" color=\"error\">\r\n          Error\r\n        </Button>\r\n        <Button variant=\"text\" color=\"warning\">\r\n          Warning\r\n        </Button>\r\n        <Button variant=\"text\" color=\"info\">\r\n          Info\r\n        </Button>\r\n        <Button variant=\"text\" color=\"success\">\r\n          Success\r\n        </Button>\r\n      </Stack>\r\n      <Stack sx={{ m: 1 }} spacing={2} direction=\"row\">\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Primary\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          Secondary\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"error\">\r\n          Error\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"warning\">\r\n          Warning\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"info\">\r\n          Info\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"success\">\r\n          Success\r\n        </Button>\r\n      </Stack>\r\n      <Stack sx={{ m: 1 }} spacing={2} direction=\"row\">\r\n        <Button variant=\"outlined\" color=\"primary\">\r\n          Primary\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"secondary\">\r\n          Secondary\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"error\">\r\n          Error\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"warning\">\r\n          Warning\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"info\">\r\n          Info\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"success\">\r\n          Success\r\n        </Button>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonTest;\r\n","import React, { useState } from \"react\";\r\nimport { MaterialReactTable } from \"material-react-table\";\r\n\r\n//nested data is ok, see accessorKeys in ColumnDef below\r\nconst data = [\r\n  {\r\n    name: {\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n    },\r\n    address: \"261 Erdman Ford\",\r\n    city: \"East Daphne\",\r\n    state: \"Kentucky\",\r\n  },\r\n  {\r\n    name: {\r\n      firstName: \"Jane\",\r\n      lastName: \"Doe\",\r\n    },\r\n    address: \"769 Dominic Grove\",\r\n    city: \"Columbus\",\r\n    state: \"Ohio\",\r\n  },\r\n  {\r\n    name: {\r\n      firstName: \"Joe\",\r\n      lastName: \"Doe\",\r\n    },\r\n    address: \"566 Brakus Inlet\",\r\n    city: \"South Linda\",\r\n    state: \"West Virginia\",\r\n  },\r\n  {\r\n    name: {\r\n      firstName: \"Kevin\",\r\n      lastName: \"Vandy\",\r\n    },\r\n    address: \"722 Emie Stream\",\r\n    city: \"Lincoln\",\r\n    state: \"Nebraska\",\r\n  },\r\n  {\r\n    name: {\r\n      firstName: \"Joshua\",\r\n      lastName: \"Rolluffs\",\r\n    },\r\n    address: \"32188 Larkin Turnpike\",\r\n    city: \"Charleston\",\r\n    state: \"South Carolina\",\r\n  },\r\n];\r\n\r\nconst MaterialTable = () => {\r\n  const makeBlue = (city, name) => {\r\n    if (name === \"Doe\") return <span style={{ color: \"blue\" }}>{city}</span>;\r\n    return city;\r\n  };\r\n\r\n  let columns = [\r\n    {\r\n      accessorKey: \"name.firstName\", //access nested data with dot notation\r\n      header: \"First Name\",\r\n      size: 10,\r\n    },\r\n    {\r\n      accessorKey: \"name.lastName\",\r\n      header: \"Last Name\",\r\n      size: 10,\r\n    },\r\n    {\r\n      accessorKey: \"address\", //normal accessorKey\r\n      header: \"Address\",\r\n    },\r\n    {\r\n      accessorKey: \"city\",\r\n      header: \"City\",\r\n      Cell: ({ renderedCellValue, row }) =>\r\n        makeBlue(renderedCellValue, row._valuesCache[\"name.lastName\"]),\r\n    },\r\n    {\r\n      accessorKey: \"state\",\r\n      header: \"State\",\r\n      Cell: ({ renderedCellValue }) => {\r\n        return <span style={{ color: \"red\" }}>{renderedCellValue}</span>;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [columnOrder, setColumnOrder] = useState(\r\n    columns.map((c) => c.accessorKey)\r\n  );\r\n\r\n  const ACCESSOR_KEY = \"ACCESSOR_KEY\";\r\n\r\n  const initOrdering = () => {\r\n    let item = localStorage.getItem(ACCESSOR_KEY);\r\n\r\n    if (item === null) return columns.map((c) => c.accessorKey);\r\n\r\n    let ordering = JSON.parse(item);\r\n    return ordering;\r\n  };\r\n\r\n  const handleColumnOrderChange = (value) => {\r\n    setColumnOrder(value);\r\n    console.log(columnOrder);\r\n\r\n    console.log(value);\r\n\r\n    localStorage.setItem(ACCESSOR_KEY, JSON.stringify([...value]));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialReactTable\r\n        muiTableHeadCellProps={{\r\n          sx: {\r\n            backgroundColor: \"yellow\",\r\n            BorderStyle: \"solid\",\r\n            borderWidth: \"1px 0px 1px 0px\",\r\n            borderColor: \"black black black black\",\r\n          },\r\n        }}\r\n        muiTablePaperProps={{\r\n          elevation: 10, // shadow effect\r\n          sx: {\r\n            margin: \"0 auto\",\r\n            width: \"80%\",\r\n            border: \"1px solid black\",\r\n          },\r\n        }}\r\n        muiTableBodyProps={{\r\n          sx: {\r\n            \"& tr:nth-of-type(odd)\": {\r\n              backgroundColor: \"skyblue\",\r\n            },\r\n          },\r\n        }}\r\n\r\n        \r\n        columns={columns}\r\n        initialState={{\r\n          columnOrder: initOrdering,\r\n        }}\r\n        data={data}\r\n        enableColumnPinning\r\n        enableColumnOrdering\r\n        onColumnOrderChange={handleColumnOrderChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialTable;\r\n","import React from \"react\";\r\n\r\nimport TreeView from \"@mui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\n\r\nimport TreeItem from \"@mui/lab/TreeItem\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nconst MyTreeItem = withStyles({\r\n  root: {\r\n    \"&.MuiTreeItem-root > .MuiTreeItem-content:hover\": {\r\n      background: \"red\",\r\n    },\r\n    \"&.MuiTreeItem-root > .MuiTreeItem-content:hover > .MuiTreeItem-label\": {\r\n      background: \"pink\",\r\n    },\r\n    \"&.MuiTreeItem-root > .Mui-selected\": {\r\n      background: \"grey\",\r\n    },\r\n    \"@media (hover: none)\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n})(TreeItem);\r\n\r\nconst TreeViewExample = () => {\r\n  return (\r\n    <div>\r\n      \r\n      <TreeView\r\n        aria-label=\"file system navigator\"\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        disabledItemsFocusable={true}\r\n        sx={{ height: 240, flexGrow: 1, maxWidth: 400, overflowY: \"auto\" }}\r\n      >\r\n        <MyTreeItem\r\n          nodeId=\"1\"\r\n          label=\"Applications\"\r\n          onClick={(e) => console.log(e.target.innerText)}\r\n        >\r\n          <MyTreeItem nodeId=\"2\" label=\"Calendar\" />\r\n        </MyTreeItem>\r\n        <MyTreeItem nodeId=\"5\" label=\"Documents\">\r\n          <MyTreeItem nodeId=\"10\" label=\"OSS\" />\r\n          <MyTreeItem nodeId=\"6\" label=\"MUI\" disabled={true}>\r\n            <MyTreeItem nodeId=\"8\" label=\"index.js\" />\r\n          </MyTreeItem>\r\n        </MyTreeItem>\r\n      </TreeView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeViewExample;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport TreeView from \"@mui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport TreeItem from \"@mui/lab/TreeItem\";\r\n\r\nlet localData = {\r\n  child: [\r\n    {\r\n      label: \"D:\",\r\n      nodeId: 0,\r\n      child: [\r\n        {\r\n          label: \"github\",\r\n          nodeId: 1,\r\n          child: [\r\n            {\r\n              label: \"globfiles\",\r\n              nodeId: 2,\r\n              child: [\r\n                {\r\n                  label: \"abc1\",\r\n                  nodeId: 3,\r\n                  child: [\r\n                    { label: \"abc1_jsonfile1.json\", nodeId: 4 },\r\n                    { label: \"abc1_jsonfile2.json\", nodeId: 5 },\r\n                    { label: \"abc1_textfile1.txt\", nodeId: 6 },\r\n                    { label: \"abc1_textfile2.txt\", nodeId: 7 },\r\n                    {\r\n                      label: \"abc2\",\r\n                      nodeId: 8,\r\n                      child: [\r\n                        { label: \"abc2_jsonfile.json\", nodeId: 12 },\r\n                        {\r\n                          label: \"abc3\",\r\n                          nodeId: 13,\r\n                          child: [\r\n                            { label: \"abc3_jsonfile.json\", nodeId: 14 },\r\n                            { label: \"abc3_textfile.txt\", nodeId: 15 },\r\n                          ],\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      label: \"abc2_2\",\r\n                      nodeId: 9,\r\n                      child: [\r\n                        { label: \"abc2_2_jsonfile.json\", nodeId: 10 },\r\n                        { label: \"abc2_2_textfile.txt\", nodeId: 11 },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  label: \"def1\",\r\n                  nodeId: 16,\r\n                  child: [\r\n                    { label: \"def_jsonfile1.json\", nodeId: 17 },\r\n                    { label: \"def_jsonfile2.json\", nodeId: 18 },\r\n                    { label: \"def_textfile1.txt\", nodeId: 19 },\r\n                    { label: \"def_textfile2.txt\", nodeId: 20 },\r\n                  ],\r\n                },\r\n                {\r\n                  label: \"ghi1\",\r\n                  nodeId: 21,\r\n                  child: [\r\n                    {\r\n                      label: \"ghi2\",\r\n                      nodeId: 22,\r\n                      child: [\r\n                        { label: \"ghi2_jsonfile1.json\", nodeId: 23 },\r\n                        { label: \"ghi2_jsonfile2.json\", nodeId: 24 },\r\n                        { label: \"ghi2_textfile1.txt\", nodeId: 25 },\r\n                        { label: \"ghi2_textfile2.txt\", nodeId: 26 },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                { label: \"jsonfile1.json\", nodeId: 27 },\r\n                { label: \"jsonfile2.json\", nodeId: 28 },\r\n                { label: \"textfile1.txt\", nodeId: 29 },\r\n                { label: \"textfile2.txt\", nodeId: 30 },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst TreeViewExample2 = () => {\r\n  const [treeInfo, setTreeInfo] = useState({});\r\n\r\n  const [expanded, setExpanded] = React.useState([]);\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  /*\r\n  let tmpTreeInfo = {};\r\n  let nodeId = 0;\r\n  const appendChild = (arr, info) => {\r\n    if (arr.child === undefined) arr.child = [];\r\n    if (arr.child.findIndex((item) => item.label === info) === -1) {\r\n      arr.child.push({ label: info, nodeId });\r\n      nodeId++;\r\n    }\r\n  };\r\n\r\n  const makeDirectories = (directories) => {\r\n    tmpTreeInfo = {};\r\n    for (let d of directories) {\r\n      let split = d.split(\"/\");\r\n      let len = split.length;\r\n      let current = tmpTreeInfo;\r\n\r\n      for (let i = 0; i < len; i++) {\r\n        appendChild(current, split[i]);\r\n        current = current.child.find((item) => item.label === split[i]);\r\n      }\r\n    }\r\n\r\n    console.log(tmpTreeInfo);\r\n    setTreeInfo(tmpTreeInfo);\r\n  };\r\n  */\r\n\r\n  const getFiles = () => {\r\n    setTreeInfo(localData);\r\n    return;\r\n    // let server = `http://192.168.55.120:3002`;\r\n    // let path = `D:\\\\github\\\\globfiles\\\\**`;\r\n    // fetch(`${server}/useGlob?path=${path}`)\r\n    //   .then((res) => res.json())\r\n    //   .then((data) => makeDirectories(data.findPath));\r\n  };\r\n\r\n  const makeTreeItem = (info, parent) => {\r\n    if (info.child === undefined) return;\r\n\r\n    return info.child.map((item, idx) => (\r\n      <TreeItem\r\n        key={idx}\r\n        nodeId={item.nodeId.toString()}\r\n        label={item.label}\r\n        onClick={() => console.log(`${parent}/${item.label}`)}\r\n      >\r\n        {makeTreeItem(item, `${parent}/${item.label}`)}\r\n      </TreeItem>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  const handleToggle = (event, nodeIds) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const handleSelect = (event, nodeIds) => {\r\n    setSelected(nodeIds);\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    let fullExpanded = [];\r\n    for (let i = 0; i <= 30; i++) fullExpanded.push(i.toString());\r\n\r\n    setExpanded((oldExpanded) =>\r\n      oldExpanded.length === 0 ? fullExpanded : []\r\n    );\r\n  };\r\n\r\n  const handleSelectClick = () => {\r\n    setSelected((oldSelected) =>\r\n      oldSelected.length === 0\r\n        ? [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r\n        : []\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ mb: 1 }}>\r\n        <Button onClick={handleExpandClick}>\r\n          {expanded.length === 0 ? \"Expand all\" : \"Collapse all\"}\r\n        </Button>\r\n        <Button onClick={handleSelectClick}>\r\n          {selected.length === 0 ? \"Select all\" : \"Unselect all\"}\r\n        </Button>\r\n      </Box>\r\n      <TreeView\r\n        expanded={expanded}\r\n        selected={selected}\r\n        onNodeToggle={handleToggle}\r\n        onNodeSelect={handleSelect}\r\n        aria-label=\"file system navigator\"\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        //sx={{ height: 240, flexGrow: 1, maxWidth: 400, overflowY: \"auto\" }}\r\n      >\r\n        {makeTreeItem(treeInfo, \"\")}\r\n      </TreeView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeViewExample2;\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextSnippetIcon from \"@mui/icons-material/TextSnippet\";\r\nimport DataObjectICON from \"@mui/icons-material/DataObject\";\r\nimport FolderIcon from \"@mui/icons-material/Folder\";\r\n\r\nconst getFileName = (path) => {\r\n  if (path === undefined) return undefined;\r\n  let spt = path.split(\"/\");\r\n  return spt[spt.length - 1];\r\n};\r\n\r\nconst getMuiIcon = (fileName) => {\r\n  if (fileName === undefined) return <TextSnippetIcon sx={{ fontSize: 60 }} />;\r\n\r\n  let spt = fileName.split(\".\");\r\n  if (spt.length === 1)\r\n    return <FolderIcon sx={{ fontSize: 60, left: \"50%\" }} />;\r\n  if (spt[1] === \"json\")\r\n    return <DataObjectICON sx={{ fontSize: 60, left: \"50%\" }} />;\r\n  return <TextSnippetIcon sx={{ fontSize: 60, left: \"50%\" }} />;\r\n};\r\n\r\nconst downloadPC = (response, fileName) => {\r\n  const url = window.URL.createObjectURL(\r\n    new Blob([response.data], { type: `${response.headers[\"content-type\"]}` })\r\n  );\r\n\r\n  let link = document.createElement(\"a\");\r\n  link.href = url;\r\n  link.setAttribute(\"download\", fileName);\r\n\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n\r\n  window.URL.revokeObjectURL(url); // memory 해제\r\n};\r\n\r\nconst makeExpandedView = (pathInfo, idMap, tvfunc) => {\r\n  let tmp = [...tvfunc.expanded];\r\n  let spt = pathInfo.split(\"/\");\r\n  let tmpPath = \"D:\";\r\n  for(let i = 1; i < spt.length; i++) {\r\n    tmpPath += `/${spt[i]}`;\r\n\r\n    console.log(tmpPath);\r\n    if(idMap[tmpPath] === undefined) continue;\r\n    if(tmp.includes(idMap[tmpPath])) continue;\r\n\r\n    tmp.push(idMap[tmpPath]);\r\n  }\r\n\r\n  tvfunc.setExpanded([...tmp]);\r\n} \r\n\r\nconst download = (pathInfo) => {\r\n  if (pathInfo === undefined || pathInfo === \"\") return;\r\n\r\n  let fileName = getFileName(pathInfo);\r\n\r\n  if (fileName.includes(\".\") === false) return; // 폴더인 경우\r\n\r\n  let server = `http://192.168.55.120:3002`;\r\n  axios\r\n    .get(`${server}/downloadFile?filePath=${pathInfo}`, {\r\n      responseType: \"arraybuffer\",\r\n    })\r\n    .then((res) => {\r\n      downloadPC(res, fileName);\r\n    })\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getFileBrowser = (pathInfo, idMap, tvfunc) => {\r\n  if (pathInfo === undefined || pathInfo === \"\") return;\r\n\r\n  let fileName = getFileName(pathInfo);\r\n\r\n  if (fileName.includes(\".\")) return;\r\n\r\n  makeExpandedView(pathInfo, idMap, tvfunc);\r\n  tvfunc.setSelected(idMap[pathInfo]);\r\n\r\n  let server = `http://192.168.55.120:3002`;\r\n  let path = pathInfo + \"/*\";\r\n\r\n  fetch(`${server}/useGlob?path=${path}`)\r\n    .then((res) => res.json())\r\n    .then((data) => tvfunc.sortFileUI(data.findPath));\r\n}\r\n\r\nconst FileUI = ({ pathInfo, idMap, tvfunc }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"inline-block\",\r\n        width: \"110px\",\r\n        height: \"120px\",\r\n        backgroundColor: \"silver\",\r\n        textAlign: \"center\",\r\n        margin: \"10px\",\r\n        cursor: \"pointer\",\r\n        verticalAlign: \"top\",\r\n      }}\r\n      onClick={() => download(pathInfo)}\r\n      onDoubleClick={() => getFileBrowser(pathInfo, idMap, tvfunc)}\r\n    >\r\n      {getMuiIcon(getFileName(pathInfo))}\r\n      <div style={{ width: \"110px\", height: \"40px\", wordBreak: \"break-all\" }}>\r\n        <span\r\n          style={{\r\n            fontSize: \"12px\",\r\n            backgroundColor: \"green\",\r\n            cursor: \"pointer\",\r\n            display: \"block\",\r\n            height: \"50px\",\r\n          }}\r\n        >\r\n          {getFileName(pathInfo)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUI;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport TreeView from \"@mui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport FileUI from \"./FileUI\";\r\n\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\n\r\nimport MyTreeItem from \"@mui/lab/TreeItem\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nconst TreeItem = withStyles({\r\n  root: {\r\n    \"&.MuiTreeItem-root > .MuiTreeItem-content:hover\": {\r\n      background: \"red\",\r\n    },\r\n    \"&.MuiTreeItem-root > .MuiTreeItem-content:hover > .MuiTreeItem-label\": {\r\n      background: \"pink\",\r\n    },\r\n    \"&.MuiTreeItem-root > .Mui-selected\": {\r\n      background: \"grey\",\r\n    },\r\n    \"@media (hover: none)\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n})(MyTreeItem);\r\n\r\nconst FileBrowser = () => {\r\n  const [treeInfo, setTreeInfo] = useState({});\r\n  const [fileUi, setFileUI] = useState([]);\r\n\r\n  const [idMap, setIdMap] = useState({});\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [id, setId] = useState(0);\r\n\r\n  const [value, setValue] = useState(null);\r\n  const [dirList, setDirList] = useState([]);\r\n\r\n  const treeFocus = useRef([]);\r\n\r\n  let nodeId = 0;\r\n  const appendChild = (arr, info, path, tmpIdMap) => {\r\n    if (arr.child === undefined) arr.child = [];\r\n    if (arr.child.findIndex((item) => item.label === info) === -1) {\r\n      arr.child.push({ label: info, nodeId });\r\n      tmpIdMap[path] = nodeId.toString();\r\n      nodeId++;\r\n    }\r\n  };\r\n\r\n  const makeDirectories = (directories) => {\r\n    let tmpTreeInfo = {};\r\n    let tmpIdMap = {};\r\n\r\n    let dir = [\"D:\", \"D:/github\", ...directories];\r\n\r\n    for (let d of dir) {\r\n      let split = d.split(\"/\");\r\n      let len = split.length;\r\n      let current = tmpTreeInfo;\r\n\r\n      for (let i = 0; i < len; i++) {\r\n        appendChild(current, split[i], d, tmpIdMap);\r\n        current = current.child.find((item) => item.label === split[i]);\r\n      }\r\n    }\r\n\r\n    setDirList(directories);\r\n    setIdMap(tmpIdMap);\r\n    setTreeInfo(tmpTreeInfo);\r\n    setId(nodeId);\r\n  };\r\n\r\n  const getFiles = () => {\r\n    // setTreeInfo(localData);\r\n    // return;\r\n    let server = `http://192.168.55.120:3002`;\r\n    let path = `D:\\\\github\\\\globfiles\\\\**`;\r\n\r\n    fetch(`${server}/useGlob?path=${path}`,{\r\n        method: 'GET', // HTTP 요청 방법 (GET, POST 등)\r\n        //credentials: 'include', // 쿠키를 요청에 포함시키기 위한 옵션\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => makeDirectories(data.findPath));\r\n  };\r\n\r\n  const isFile = (path) => {\r\n    let spt = path.split(\"/\");\r\n    return spt[spt.length - 1].includes(\".\");\r\n  };\r\n\r\n  const sortFileUI = (path) => {\r\n    let dir = path.filter((val) => isFile(val) === false);\r\n    let files = path.filter((val) => isFile(val));\r\n\r\n    dir.sort();\r\n    files.sort();\r\n\r\n    setFileUI([...dir, ...files]);\r\n  };\r\n\r\n  const getFilesForFileBrowser = (path) => {\r\n    let server = `http://192.168.55.120:3002`;\r\n\r\n    /* /D:/... 앞의 / 삭제 */\r\n    path = path.substring(1, path.length);\r\n\r\n    setValue(path);\r\n\r\n    fetch(`${server}/useGlob?path=${path}/*`)\r\n      .then((res) => res.json())\r\n      .then((data) => sortFileUI(data.findPath));\r\n  };\r\n\r\n  const makeTreeItem = (info, parent) => {\r\n    if (info.child === undefined) return;\r\n    return info.child.map((item, idx) => (\r\n      <TreeItem\r\n        key={idx}\r\n        nodeId={item.nodeId.toString()}\r\n        ref={(val) => (treeFocus.current[item.nodeId] = val)}\r\n        label={item.label}\r\n        onClick={() => getFilesForFileBrowser(`${parent}/${item.label}`)}\r\n      >\r\n        {makeTreeItem(item, `${parent}/${item.label}`)}\r\n      </TreeItem>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selected.length === 0) return;\r\n    setTimeout(() => {\r\n      treeFocus.current[parseInt(idMap[value])].focus();\r\n    }, 250);\r\n  }, [selected]);\r\n\r\n  let clickTime = new Date();\r\n  const handleToggle = (event, ids) => {\r\n    let current = new Date();\r\n    if (event.target.className === \"MuiTreeItem-label\") {\r\n      let diff = current.getTime() - clickTime.getTime();\r\n      clickTime = new Date();\r\n      if (diff > 250) return;\r\n    }\r\n    clickTime = new Date();\r\n    setExpanded(ids);\r\n  };\r\n\r\n  const handleSelect = (event, ids) => {\r\n    setSelected(ids);\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    let fullExpanded = [];\r\n    for (let i = 0; i <= id; i++) fullExpanded.push(i.toString());\r\n\r\n    setExpanded((oldExpanded) =>\r\n      oldExpanded.length === 0 ? fullExpanded : []\r\n    );\r\n  };\r\n\r\n  const makeExpandedView = (pathInfo) => {\r\n    let tmp = [\"0\", \"1\", ...expanded];\r\n    let spt = pathInfo.split(\"/\");\r\n    let tmpPath = \"D:\";\r\n    for (let i = 1; i < spt.length; i++) {\r\n      tmpPath += `/${spt[i]}`;\r\n\r\n      if (idMap[tmpPath] === undefined) continue;\r\n      if (tmp.includes(idMap[tmpPath])) continue;\r\n\r\n      tmp.push(idMap[tmpPath]);\r\n    }\r\n\r\n    setSelected(idMap[pathInfo]);\r\n    setExpanded([...tmp]);\r\n  };\r\n\r\n  const defaultProps = {\r\n    options: dirList,\r\n    getOptionLabel: (option) => option,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Stack spacing={1} sx={{ width: \"80%\", marginLeft: 5, paddingBottom: 3 }}>\r\n        <Autocomplete\r\n          {...defaultProps}\r\n          id=\"auto-complete\"\r\n          autoComplete\r\n          includeInputInList\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n            getFilesForFileBrowser(`/${newValue}`);\r\n            makeExpandedView(newValue);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Search Files\" variant=\"standard\" />\r\n          )}\r\n        />\r\n      </Stack>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"25% 1% auto\",\r\n          gridGap: \"25px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {/* <button onClick={getFiles}>test</button> */}\r\n        <div>\r\n          {/* <a\r\n            href=\"https://bloodstrawberry.tistory.com/1175\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Node Server 구현 필요\r\n          </a> */}\r\n          <Box sx={{ mb: 1 }}>\r\n            <Button onClick={handleExpandClick}>\r\n              {expanded.length === 0 ? \"Expand all\" : \"Collapse all\"}\r\n            </Button>\r\n          </Box>\r\n          <TreeView\r\n            expanded={expanded}\r\n            onNodeToggle={handleToggle}\r\n            selected={selected}\r\n            onNodeSelect={handleSelect}\r\n            aria-label=\"file system navigator\"\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            sx={{ height: 500, overflowX: \"hidden\" }}\r\n            //sx={{ height: 240, flexGrow: 1, maxWidth: 400, overflowY: \"auto\" }}\r\n          >\r\n            {makeTreeItem(treeInfo, \"\")}\r\n          </TreeView>\r\n        </div>\r\n        <div style={{ borderRight: \"2px solid black\" }} />\r\n        <div>\r\n          {fileUi.map((f, idx) => (\r\n            <FileUI\r\n              key={idx}\r\n              pathInfo={f}\r\n              idMap={idMap}\r\n              tvfunc={{ expanded, setExpanded, setSelected, sortFileUI }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileBrowser;\r\n","import React, { useState } from \"react\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: \"Pulp Fiction\", year: 1994 },\r\n  {\r\n    title: \"The Lord of the Rings: The Return of the King\",\r\n    year: 2003,\r\n  },\r\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\r\n  { title: \"Fight Club\", year: 1999 },\r\n  {\r\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: \"Star Wars: Episode V - The Empire Strikes Back\",\r\n    year: 1980,\r\n  },\r\n  { title: \"Forrest Gump\", year: 1994 },\r\n  { title: \"Inception\", year: 2010 },\r\n  {\r\n    title: \"The Lord of the Rings: The Two Towers\",\r\n    year: 2002,\r\n  },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: \"Goodfellas\", year: 1990 },\r\n  { title: \"The Matrix\", year: 1999 },\r\n  { title: \"Seven Samurai\", year: 1954 },\r\n  {\r\n    title: \"Star Wars: Episode IV - A New Hope\",\r\n    year: 1977,\r\n  },\r\n  { title: \"City of God\", year: 2002 },\r\n  { title: \"Se7en\", year: 1995 },\r\n  { title: \"The Silence of the Lambs\", year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: \"Life Is Beautiful\", year: 1997 },\r\n  { title: \"The Usual Suspects\", year: 1995 },\r\n  { title: \"Léon: The Professional\", year: 1994 },\r\n  { title: \"Spirited Away\", year: 2001 },\r\n  { title: \"Saving Private Ryan\", year: 1998 },\r\n  { title: \"Once Upon a Time in the West\", year: 1968 },\r\n  { title: \"American History X\", year: 1998 },\r\n  { title: \"Interstellar\", year: 2014 },\r\n  { title: \"Casablanca\", year: 1942 },\r\n  { title: \"City Lights\", year: 1931 },\r\n  { title: \"Psycho\", year: 1960 },\r\n  { title: \"The Green Mile\", year: 1999 },\r\n  { title: \"The Intouchables\", year: 2011 },\r\n  { title: \"Modern Times\", year: 1936 },\r\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\r\n  { title: \"Rear Window\", year: 1954 },\r\n  { title: \"The Pianist\", year: 2002 },\r\n  { title: \"The Departed\", year: 2006 },\r\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\r\n  { title: \"Back to the Future\", year: 1985 },\r\n  { title: \"Whiplash\", year: 2014 },\r\n  { title: \"Gladiator\", year: 2000 },\r\n  { title: \"Memento\", year: 2000 },\r\n  { title: \"The Prestige\", year: 2006 },\r\n  { title: \"The Lion King\", year: 1994 },\r\n  { title: \"Apocalypse Now\", year: 1979 },\r\n  { title: \"Alien\", year: 1979 },\r\n  { title: \"Sunset Boulevard\", year: 1950 },\r\n  {\r\n    title:\r\n      \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\r\n    year: 1964,\r\n  },\r\n  { title: \"The Great Dictator\", year: 1940 },\r\n  { title: \"Cinema Paradiso\", year: 1988 },\r\n  { title: \"The Lives of Others\", year: 2006 },\r\n  { title: \"Grave of the Fireflies\", year: 1988 },\r\n  { title: \"Paths of Glory\", year: 1957 },\r\n  { title: \"Django Unchained\", year: 2012 },\r\n  { title: \"The Shining\", year: 1980 },\r\n  { title: \"WALL·E\", year: 2008 },\r\n  { title: \"American Beauty\", year: 1999 },\r\n  { title: \"The Dark Knight Rises\", year: 2012 },\r\n  { title: \"Princess Mononoke\", year: 1997 },\r\n  { title: \"Aliens\", year: 1986 },\r\n  { title: \"Oldboy\", year: 2003 },\r\n  { title: \"Once Upon a Time in America\", year: 1984 },\r\n  { title: \"Witness for the Prosecution\", year: 1957 },\r\n  { title: \"Das Boot\", year: 1981 },\r\n  { title: \"Citizen Kane\", year: 1941 },\r\n  { title: \"North by Northwest\", year: 1959 },\r\n  { title: \"Vertigo\", year: 1958 },\r\n  {\r\n    title: \"Star Wars: Episode VI - Return of the Jedi\",\r\n    year: 1983,\r\n  },\r\n  { title: \"Reservoir Dogs\", year: 1992 },\r\n  { title: \"Braveheart\", year: 1995 },\r\n  { title: \"M\", year: 1931 },\r\n  { title: \"Requiem for a Dream\", year: 2000 },\r\n  { title: \"Amélie\", year: 2001 },\r\n  { title: \"A Clockwork Orange\", year: 1971 },\r\n  { title: \"Like Stars on Earth\", year: 2007 },\r\n  { title: \"Taxi Driver\", year: 1976 },\r\n  { title: \"Lawrence of Arabia\", year: 1962 },\r\n  { title: \"Double Indemnity\", year: 1944 },\r\n  {\r\n    title: \"Eternal Sunshine of the Spotless Mind\",\r\n    year: 2004,\r\n  },\r\n  { title: \"Amadeus\", year: 1984 },\r\n  { title: \"To Kill a Mockingbird\", year: 1962 },\r\n  { title: \"Toy Story 3\", year: 2010 },\r\n  { title: \"Logan\", year: 2017 },\r\n  { title: \"Full Metal Jacket\", year: 1987 },\r\n  { title: \"Dangal\", year: 2016 },\r\n  { title: \"The Sting\", year: 1973 },\r\n  { title: \"2001: A Space Odyssey\", year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: \"Toy Story\", year: 1995 },\r\n  { title: \"Bicycle Thieves\", year: 1948 },\r\n  { title: \"The Kid\", year: 1921 },\r\n  { title: \"Inglourious Basterds\", year: 2009 },\r\n  { title: \"Snatch\", year: 2000 },\r\n  { title: \"3 Idiots\", year: 2009 },\r\n  { title: \"Monty Python and the Holy Grail\", year: 1975 },\r\n];\r\n\r\nconst MyAutoComplete = () => {\r\n  // const defaultProps = {\r\n  //   options: top100Films,\r\n  //   getOptionLabel: (option) => `${option.year} : ${option.title}`,\r\n  // };\r\n\r\n  const [value, setValue] = useState(null);\r\n  const [multipleValue, setMultipleValue] = useState([]);\r\n\r\n  const top100Films10Year = top100Films.map((item) => {\r\n    const year10 = item.year - (item.year % 10);\r\n    return {\r\n      ...item,\r\n      year10,\r\n    };\r\n  });\r\n\r\n  const myFilter = (item, inputValue) => {\r\n    if (inputValue === \"\") return true;\r\n    return item.title.includes(inputValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>{value ? value.title : null}</p>\r\n      <Stack spacing={1} sx={{ width: 300, marginLeft: 5 }}>\r\n        <Autocomplete\r\n          /* group */\r\n          options={top100Films10Year.sort((a, b) => a.year10 - b.year10)}\r\n          groupBy={(option) => option.year10}\r\n          getOptionLabel={(option) => option.title}\r\n\r\n          /* filter */\r\n          filterOptions={(list, input) =>\r\n            list.filter((item) => myFilter(item, input.inputValue))\r\n          }\r\n\r\n          id=\"auto-complete\"\r\n          autoComplete\r\n          includeInputInList\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"목록\" variant=\"standard\" />\r\n          )}\r\n        />\r\n      </Stack>\r\n      <hr style={{borderColor: \"black\"}} />\r\n      <Autocomplete\r\n        multiple\r\n        id=\"tags-outlined\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        //defaultValue={[top100Films[13]]}\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"filterSelectedOptions\"\r\n            placeholder=\"Favorites\"\r\n          />\r\n        )}\r\n        onChange={(event, newValue) => {\r\n          const util = require(\"util\");\r\n          let str = newValue.map((data) => {\r\n            if (typeof data === \"object\") {\r\n              return util.inspect(data);\r\n            }\r\n            return data;\r\n          });\r\n\r\n          console.log(str);\r\n          setMultipleValue(str);\r\n        }}\r\n      />\r\n      <p>{multipleValue}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAutoComplete;\r\n","import React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst LoadingBar = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    bgcolor: \"rgba(255,255,255,0.5)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n\r\n  function asyncFunction() {\r\n    return new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 3000);\r\n    });\r\n  }\r\n\r\n  const test = () => {\r\n    setOpen(true);\r\n    asyncFunction().then(() => setOpen(false));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={test}>Async function</Button>\r\n      <Modal\r\n        open={open}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <CircularProgress />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingBar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// Toast UI Editor\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\"; // Viewer css\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport Viewer from \"@toast-ui/editor/dist/toastui-editor-viewer\";\r\n\r\n// Dark Theme 적용\r\n// import '@toast-ui/editor/dist/toastui-editor.css';\r\n// import '@toast-ui/editor/dist/theme/toastui-editor-dark.css';\r\n\r\n// Color Syntax Plugin\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\n\r\n// Table Merged Cell Plugin\r\nimport \"@toast-ui/editor-plugin-table-merged-cell/dist/toastui-editor-plugin-table-merged-cell.css\";\r\nimport tableMergedCell from \"@toast-ui/editor-plugin-table-merged-cell\";\r\n\r\nconst colorSyntaxOptions = {\r\n  preset: [\r\n    \"#333333\", \"#666666\", \"#FFFFFF\", \"#EE2323\", \"#F89009\", \"#009A87\", \"#006DD7\", \"#8A3DB6\",\r\n    \"#781B33\", \"#5733B1\", \"#953B34\", \"#FFC1C8\", \"#FFC9AF\", \"#9FEEC3\", \"#99CEFA\", \"#C1BEF9\",\r\n  ],\r\n};\r\n\r\nconst CONTENT_KEY = \"CONTENT_KEY\";\r\n\r\nconst ToastEditor = () => {\r\n  const editorRef = useRef(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  let initData = `# 제목\r\n\r\n  ***~~<span style=\"color: #EE2323\">내용</span>~~***\r\n  \r\n  * [x] 체크박스\r\n  * [ ] 체크박스 2`;\r\n\r\n  const handleSave = () => {\r\n    let markDownContent = editorRef.current.getInstance().getMarkdown();\r\n    //let htmlContent = editorRef.current.getInstance().getHTML();\r\n    console.log(markDownContent);\r\n    localStorage.setItem(CONTENT_KEY, markDownContent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let item = localStorage.getItem(CONTENT_KEY);\r\n    \r\n    if (editMode === false) {\r\n      const viewer = new Viewer({\r\n        el: document.querySelector(\".toast-editor-viewer\"),\r\n        viewer: true,\r\n        height: \"400px\",\r\n        usageStatistics: false, // 통계 수집 거부\r\n        plugins: [tableMergedCell],\r\n      });\r\n\r\n      if(item) viewer.setMarkdown(item);\r\n      else viewer.setMarkdown(initData);\r\n    }\r\n\r\n    if (item) {\r\n      if (editorRef.current) editorRef.current.getInstance().setMarkdown(item);\r\n    } else {\r\n      \r\n      if (editorRef.current) editorRef.current.getInstance().setMarkdown(initData);\r\n    }\r\n  }, [editMode]);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <h1>Toast UI Editor</h1>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          sx={{ m: 1 }}\r\n          onClick={() => setEditMode(!editMode)}\r\n        >\r\n          {editMode ? \"취소하기\" : \"편집하기\"}\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ m: 1 }}\r\n          onClick={handleSave}\r\n          disabled={editMode === false}\r\n        >\r\n          저장하기\r\n        </Button>\r\n\r\n        {editMode === false && <div className=\"toast-editor-viewer\"></div>}\r\n\r\n        {editMode === true && (\r\n          <Editor\r\n            ref={editorRef}\r\n            // initialValue={initContents}\r\n            height=\"400px\"\r\n            placeholder=\"Please Enter Text.\"\r\n            previewStyle=\"tab\" // or vertical\r\n            initialEditType=\"wysiwyg\" // or markdown\r\n            // hideModeSwitch={true} // 하단 숨기기\r\n            toolbarItems={[\r\n              // 툴바 옵션 설정\r\n              [\"heading\", \"bold\", \"italic\", \"strike\"],\r\n              [\"hr\", \"quote\"],\r\n              [\"ul\", \"ol\", \"task\", \"indent\", \"outdent\"],\r\n              [\"table\", /* \"image\", */ \"link\"],\r\n              [\"code\", \"codeblock\"],\r\n            ]}\r\n            //theme=\"dark\"\r\n            //useCommandShortcut={false} // 키보드 입력 컨트롤 방지 ex ctrl z 등\r\n            usageStatistics={false} // 통계 수집 거부\r\n            plugins={[[colorSyntax, colorSyntaxOptions], tableMergedCell]}\r\n          />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToastEditor;","import React, { useState } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport FormatAlignLeftIcon from \"@mui/icons-material/FormatAlignLeft\";\r\nimport FormatAlignCenterIcon from \"@mui/icons-material/FormatAlignCenter\";\r\nimport FormatAlignRightIcon from \"@mui/icons-material/FormatAlignRight\";\r\n//import FormatAlignJustifyIcon from \"@mui/icons-material/FormatAlignJustify\";\r\nimport VerticalAlignBottomIcon from \"@mui/icons-material/VerticalAlignBottom\";\r\nimport VerticalAlignCenterIcon from \"@mui/icons-material/VerticalAlignCenter\";\r\nimport VerticalAlignTopIcon from \"@mui/icons-material/VerticalAlignTop\";\r\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\";\r\nimport FormatItalicIcon from \"@mui/icons-material/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@mui/icons-material/FormatUnderlined\";\r\nimport FormatStrikethroughIcon from \"@mui/icons-material/FormatStrikethrough\";\r\nimport FormatColorFillIcon from \"@mui/icons-material/FormatColorFill\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ColorizeIcon from \"@mui/icons-material/Colorize\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\n\r\nimport { CompactPicker } from \"react-color\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n  \"& .MuiToggleButtonGroup-grouped\": {\r\n    margin: theme.spacing(0.5),\r\n    border: 0,\r\n    \"&.Mui-disabled\": {\r\n      border: 0,\r\n    },\r\n    \"&:not(:first-of-type)\": {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    \"&:first-of-type\": {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HandsontableToggleButton = ({ myHandsOnTable, selectedCell }) => {\r\n  const [horizontalAlignment, setHorizontalAlignment] = useState(\"\");\r\n  const [verticalAlignment, setVerticalAlignment] = useState(\"\");\r\n  const [formats, setFormats] = useState(() => []);\r\n\r\n  const [showCompactPicker, setShowCompactPicker] = useState(false);\r\n  const [pickerPosition, setPickerPosition] = useState({ top: 0, left: 0 });\r\n  const [fontColor, setFontColor] = useState(\"#000000\");\r\n  const [bgColor, setBgColor] = useState(\"#FFFFFF\");\r\n\r\n  const getCellInfoBase = () => {\r\n    let selecetedRangeCells = myHandsOnTable.getSelectedRange();\r\n    if (selecetedRangeCells === undefined) return undefined;\r\n\r\n    let baseCell = selecetedRangeCells[0].from;\r\n    return myHandsOnTable.getCell(baseCell.row, baseCell.col);\r\n  };\r\n\r\n  const getCellInfoRange = () => {\r\n    let selecetedRangeCells = myHandsOnTable.getSelectedRange();\r\n    if (selecetedRangeCells === undefined) return undefined;\r\n\r\n    let cellPositions = [];\r\n    for (let cell of selecetedRangeCells) {\r\n      for (let r = cell.from.row; r <= cell.to.row; r++) {\r\n        for (let c = cell.from.col; c <= cell.to.col; c++)\r\n          cellPositions.push([r, c]);\r\n      }\r\n    }\r\n\r\n    return cellPositions;\r\n  };\r\n\r\n  const getHorizontalStatus = (className) => {\r\n    let status = [\"htLeft\", \"htCenter\", \"htRight\"];\r\n    let current = className.split(\" \");\r\n\r\n    return current.filter((item) => status.includes(item))[0];\r\n  };\r\n\r\n  const getVerticalStatus = (className) => {\r\n    let status = [\"htTop\", \"htMiddle\", \"htBottom\"];\r\n    let current = className.split(\" \");\r\n\r\n    return current.filter((item) => status.includes(item))[0];\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment, type) => {\r\n    console.log(newAlignment, type);\r\n\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    if (type === \"horizontal\") setHorizontalAlignment(newAlignment);\r\n    else if (type === \"vertical\") setVerticalAlignment(newAlignment);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n      let className = cellInfo.className;\r\n      let split = className.split(\" \");\r\n      if (type === \"horizontal\") {\r\n        let horizontal = getHorizontalStatus(className);\r\n        split = split.filter((item) => item !== horizontal); // 현재 설정 값 삭제\r\n      } else if (type === \"vertical\") {\r\n        let vertical = getVerticalStatus(className);\r\n        split = split.filter((item) => item !== vertical); // 현재 설정 값 삭제\r\n      }\r\n\r\n      if (newAlignment) split.push(newAlignment); // 새로 설정된 값 추가.\r\n\r\n      cellInfo.className = split.join(\" \");\r\n    }\r\n  };\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    console.log(newFormats);\r\n\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    setFormats(newFormats);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n\r\n      cellInfo.style.fontWeight = newFormats.includes(\"bold\") ? \"bold\" : \"\";\r\n      cellInfo.style.fontStyle = newFormats.includes(\"italic\") ? \"italic\" : \"\";\r\n\r\n      let deco = [];\r\n      if (newFormats.includes(\"underline\")) deco.push(\"underline\");\r\n      if (newFormats.includes(\"line-through\")) deco.push(\"line-through\");\r\n\r\n      cellInfo.style.textDecoration = deco.join(\" \");\r\n    }\r\n  };\r\n\r\n  const handleToggleCompactPicker = (event, type) => {\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    const iconButton = event.currentTarget;\r\n    const rect = iconButton.getBoundingClientRect();\r\n    const pickerTop = rect.bottom + window.scrollY;\r\n    const pickerLeft = rect.left + window.scrollX;\r\n\r\n    setPickerPosition({ top: pickerTop, left: pickerLeft });\r\n    setShowCompactPicker((prev) => !prev);\r\n  };\r\n\r\n  const handleChangeComplete = (color, event) => {\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    let colorType = formats.includes(\"fontColor\") ? \"fontColor\" : \"bgColor\";\r\n\r\n    console.log(colorType, color.hex);\r\n\r\n    if (colorType === \"fontColor\") setFontColor(color.hex);\r\n    else setBgColor(color.hex);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n\r\n      if (colorType === \"fontColor\") {\r\n        cellInfo.style.color = color.hex;\r\n      } else {\r\n        cellInfo.style.backgroundColor = color.hex;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getColorPicker = () => {\r\n    let colorType = formats.includes(\"fontColor\") ? \"fontColor\" : \"bgColor\";\r\n    return (\r\n      <CompactPicker\r\n        color={colorType === \"fontColor\" ? fontColor : bgColor}\r\n        onChangeComplete={handleChangeComplete}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    let fms = formats.filter(\r\n      (item) => (item === \"fontColor\" || item === \"bgColor\") === false\r\n    );\r\n    setFormats(fms);\r\n\r\n    setShowCompactPicker(false);\r\n  };\r\n\r\n  const setButtonState = () => {\r\n    if (myHandsOnTable === undefined) return;\r\n\r\n    let cellInfo = getCellInfoBase();\r\n    let className = cellInfo.className;\r\n    let horizontal = getHorizontalStatus(className) || \"\"; // undefined 처리\r\n    let vertical = getVerticalStatus(className) || \"\";\r\n\r\n    setHorizontalAlignment(horizontal);\r\n    setVerticalAlignment(vertical);\r\n\r\n    let fontWeight = cellInfo.style.fontWeight;\r\n    let fontStyle = cellInfo.style.fontStyle;\r\n    let textDecoration = cellInfo.style.textDecoration.split(\" \");\r\n\r\n    setFormats([fontWeight, fontStyle, ...textDecoration]);\r\n    setFontColor(cellInfo.style.color);\r\n    setBgColor(cellInfo.style.backgroundColor);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setButtonState();\r\n  }, [selectedCell]);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2, marginBottom: 5 }}>\r\n        <Paper\r\n          elevation={0}\r\n          sx={{\r\n            display: \"flex\",\r\n            border: (theme) => `1px solid ${theme.palette.divider}`,\r\n            flexWrap: \"wrap\",\r\n            width: \"580px\",\r\n          }}\r\n        >\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={horizontalAlignment}\r\n            exclusive\r\n            onChange={(e, alignment) =>\r\n              handleAlignment(e, alignment, \"horizontal\")\r\n            }\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"htLeft\" aria-label=\"left aligned\">\r\n              <FormatAlignLeftIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htCenter\" aria-label=\"centered\">\r\n              <FormatAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htRight\" aria-label=\"right aligned\">\r\n              <FormatAlignRightIcon />\r\n            </ToggleButton>\r\n            {/* <ToggleButton value=\"justify\" aria-label=\"justified\">\r\n              <FormatAlignJustifyIcon />\r\n            </ToggleButton> */}\r\n          </StyledToggleButtonGroup>\r\n\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={verticalAlignment}\r\n            exclusive\r\n            onChange={(e, alignment) =>\r\n              handleAlignment(e, alignment, \"vertical\")\r\n            }\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"htTop\" aria-label=\"top aligned\">\r\n              <VerticalAlignTopIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htMiddle\" aria-label=\"middle\">\r\n              <VerticalAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htBottom\" aria-label=\"bottom aligned\">\r\n              <VerticalAlignBottomIcon />\r\n            </ToggleButton>\r\n          </StyledToggleButtonGroup>\r\n\r\n          <Divider flexItem orientation=\"vertical\" sx={{ mx: 0.5, my: 1 }} />\r\n\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={formats}\r\n            onChange={handleFormat}\r\n            aria-label=\"text formatting\"\r\n          >\r\n            <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n              <FormatBoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n              <FormatItalicIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"underline\" aria-label=\"underline\">\r\n              <FormatUnderlinedIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"line-through\" aria-label=\"line-through\">\r\n              <FormatStrikethroughIcon />\r\n            </ToggleButton>\r\n\r\n            <ToggleButton\r\n              value=\"fontColor\"\r\n              aria-label=\"fontColor\"\r\n              onClick={(e) => handleToggleCompactPicker(e, \"fontColor\")}\r\n            >\r\n              <ColorizeIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value=\"bgColor\"\r\n              aria-label=\"bgColor\"\r\n              onClick={(e) => handleToggleCompactPicker(e, \"bgColor\")}\r\n            >\r\n              <FormatColorFillIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n          </StyledToggleButtonGroup>\r\n        </Paper>\r\n\r\n        {showCompactPicker && (\r\n          <div\r\n            className=\"compact-picker-container\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: pickerPosition.top + \"px\",\r\n              left: pickerPosition.left + \"px\",\r\n              zIndex: 1000,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"fixed\",\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                bottom: \"0px\",\r\n                left: \"0px\",\r\n              }}\r\n              onClick={handleClose}\r\n            />\r\n            {getColorPicker()}\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandsontableToggleButton;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Handsontable from \"handsontable\";\r\nimport \"handsontable/dist/handsontable.full.min.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport styled from \"styled-components\";\r\nimport HandsontableToggleButton from \"./HandsontableToggleButton\";\r\n\r\nconst DisplayCellStyle = styled.div`\r\n  span {\r\n    background-color: #33ceff;\r\n    position: relative;\r\n    padding: 0.4rem 0.85rem;\r\n    border: 1px solid transparent;\r\n    border-radius: 0.35rem;\r\n  }\r\n`;\r\n\r\n// const data = [\r\n//   [\"\", \"Tesla\", \"Nissan\", \"Toyota\", \"Honda\", \"Mazda\", \"Ford\"],\r\n//   [\"2017\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2018\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2019\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2020\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2021\", 10, 11, 12, 13, 15, 16],\r\n// ];\r\n\r\nconst data = [\r\n  [\"\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\"],\r\n  [\"Tesla\", 10, 5, 5, 10, 14, 5],\r\n  [\"Nissan\", 15, 2, 7, 11, 13, 4],\r\n  [\"Toyota\", 11, 1, 10, 12, 12, 3],\r\n  [\"Honda\", 5, 3, 7, 13, 11, 4],\r\n  [\"Mazda\", 4, 7, 5, 14, 10, 4],\r\n];\r\n\r\n// dummy data for test\r\nconst initData = () => {\r\n  let row = [];\r\n  for (let i = 0; i < 100; i++) {\r\n    row.push(String.fromCharCode(\"A\".charCodeAt() + (i % 26)));\r\n  }\r\n\r\n  let table = [];\r\n  for (let k = 0; k < 100; k++) {\r\n    let tmp = JSON.parse(JSON.stringify(row));\r\n    let number = `${k + 1}`;\r\n    for (let i = 0; i < 100; i++)\r\n      tmp[i] = `${tmp[i]}${number.padStart(3, \"0\")}`;\r\n    table.push(tmp);\r\n  }\r\n\r\n  return table;\r\n};\r\n\r\nlet searchResultCount = 0;\r\nfunction searchResultCounter(instance, row, col, value, result) {\r\n  const DEFAULT_CALLBACK = function(instance, row, col, data, testResult) {\r\n    instance.getCellMeta(row, col).isSearchResult = testResult;\r\n  };\r\n\r\n  DEFAULT_CALLBACK.apply(this, arguments);\r\n\r\n  if (result) {\r\n    searchResultCount++;\r\n  }\r\n}\r\n\r\nfunction redRenderer(instance, td) {\r\n  Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n  td.style.backgroundColor = \"red\";\r\n  td.style.fontWeight = \"bold\";\r\n}\r\n\r\nconst MY_OPTIONS = \"MY_OPTIONS\";\r\nconst COMMENTS_KEY = \"COMMENTS_KEY\";\r\nconst MERGE_CELLS_KEY = \"MERGE_CELLS_KEY\";\r\nconst CELL_STYLE_KEY = \"CELL_STYLE_KEY\";\r\n\r\nconst CustomHansOnTable = ({ myOptions }) => {\r\n  const [myHandsOnTable, setMyHandsOnTable] = useState();\r\n  const [displayCellInfo, setDisplaySetInfo] = useState(\"\");\r\n  const [selectedCell, setSelectedCell] = useState([0, 0]);\r\n\r\n  const getComments = () => {\r\n    let comments = localStorage.getItem(COMMENTS_KEY);\r\n\r\n    if (comments === null) return [];\r\n\r\n    return JSON.parse(comments);\r\n  };\r\n\r\n  const getMergeCells = () => {\r\n    let mergeCells = localStorage.getItem(MERGE_CELLS_KEY);\r\n\r\n    if (mergeCells === null) return [];\r\n\r\n    return JSON.parse(mergeCells);\r\n  };\r\n\r\n  const myNewQueryMethod = (searchValue, dataValue) => {\r\n    if (!searchValue) return false;\r\n\r\n    dataValue = dataValue || \"\";\r\n    return searchValue.toString() === dataValue.toString();\r\n  };\r\n\r\n  const cellSelected = () => {\r\n    let selectedLast = myTable.getSelectedLast();\r\n\r\n    if (selectedLast[0] < 0 || selectedLast[1] < 0) return;\r\n\r\n    let value = myTable.getValue() || \"\";\r\n    setDisplaySetInfo(value);\r\n\r\n    setSelectedCell([selectedLast[0], selectedLast[1]]);\r\n  };\r\n\r\n  const localCellStyle = localStorage.getItem(CELL_STYLE_KEY)\r\n    ? JSON.parse(localStorage.getItem(CELL_STYLE_KEY))\r\n    : null;\r\n\r\n  const options = {\r\n    data, // initData(),\r\n\r\n    /* true or false options */\r\n    colHeaders: true,\r\n    rowHeaders: true,\r\n    wordWrap: false /* 줄 바꿈 off */,\r\n    manualColumnResize: true,\r\n    manualRowResize: true,\r\n    manualColumnMove: true,\r\n    manualRowMove: true,\r\n    allowInsertColumn: true,\r\n    allowInsertRow: true,\r\n    allowRemoveColumn: true,\r\n    allowRemoveRow: true,\r\n    autoWrapCol: true /* 마지막 셀 아래에서 다음 셀 위로 이동 */,\r\n    autoWrapRow: true /* 마지막 셀 옆에서 다음 셀 처음으로 이동 */,\r\n    dragToScroll: true /* 표를 클릭 후 드래그를 할 때, 같이 스크롤 되는지 여부 */,\r\n    persistentState: false /* 열 정렬 상태, 열 위치 및 열 크기를 로컬 스토리지에 저장 */,\r\n    outsideClickDeselects: false /* 셀 외부 클릭 시, 셀 선택 해제 */,\r\n    readOnly: false /* true : 모든 셀을 readOnly로 설정*/,\r\n    enterBeginsEditing: true /* true : 엔터 클릭 시 편집 모드, false : 다음 셀로 이동 */,\r\n    copyable: true /* 복사 가능 여부 */,\r\n    copyPaste: true /* 복사, 붙여넣기 가능 여부 */,\r\n    undo: true /* false : ctrl + z 비활성화 */,\r\n    trimWhitespace: false /* 자동 trim() 실행 후 셀에 저장 */,\r\n    contextMenu: true /* 마우스 왼쪽 버튼 클릭 시 컨텍스트 메뉴 */,\r\n    comments: true /* 주석, 메모 기능 context menu에 추가 */,\r\n    manualColumnFreeze: true /* freezeColumn context menu에 추가 */,\r\n\r\n    observeChanges: true,\r\n    afterChangesObserved: () => {\r\n      //console.log(\"change !!\");\r\n    },\r\n\r\n    // filters: true, /* 필터 기능 on 6.2.2 pro  */,\r\n    // dropdownMenu: true, /* dropdown 메뉴 설정 6.2.2 pro */\r\n\r\n    /* Selected Options */\r\n    className: \"htMiddle htCenter\" /* Cell Alignment */,\r\n    // stretchH: \"none\", /* 빈 공간을 채우는 방법 : none, last, all */\r\n    // selectionMode: \"multiple\", /* Ctrl 키 + 선택 가능한 셀 : multiple, range, single */\r\n    // fillHandle : true, /* 드래그로 자동 채움 : true, false, vertical, horizontal 옵션 */\r\n    // disableVisualSelection: \"current\", /* 셀 선택 활성화 여부 : false, true, current, area, header, [option1, option2, ...] */\r\n\r\n    /* Number Options */\r\n    width: 1000,\r\n    height: 1000,\r\n\r\n    startCols: 5 /* data가 없는 경우 기본 설정 */,\r\n    startRows: 3 /* data가 없는 경우 기본 설정 */,\r\n    afterSelection: cellSelected,\r\n    // maxCols: 2, /* 주어진 값보다 큰 Column은 제거 */\r\n    // maxRows: 3, /* 주어진 값보다 큰 Row는 제거 */\r\n    // minCols: 10, /* 최소한의 Column */\r\n    // minRows: 10, /* 최소한의 Row */\r\n    // minSpareRows: 1, /* 빈 열 자동 추가 */\r\n    // minSpareCols: 2, /* 빈 행 자동 추가 */\r\n    // fixedColumnsLeft: 2,\r\n    // fixedRowsTop: 3,\r\n    // fixedRowsBottom: 2,\r\n    // rowHeaderWidth: 250, /* 행 헤더 너비 */\r\n\r\n    /* Customizing Options */\r\n    colWidths: 60 /* 특정 위치 너비 변경 : [60, 120, 60, 60, 60, 60, 60] */,\r\n    rowHeights: 25,\r\n    // placeholder: 'Empty',\r\n    // columnSorting: {\r\n    //   indicator: true, /* default true, 정렬 순서 표시 마크 (↑↓) on / off */\r\n    //   sortEmptyCells: true, /* true : 빈 셀도 정렬, false : 모든 빈 셀은 테이블 끝으로 이동 */\r\n    //   headerAction: true, /* default true, 헤더 클릭 시 정렬 기능 on / off */\r\n    //   initialConfig: {\r\n    //     column: 2, /* column : 2를 기준으로 정렬 */\r\n    //     sortOrder: \"asc\", /* 내림차순 desc */\r\n    //   },\r\n\r\n    //   /* 비교함수 구현. -1, 0, 1을 return. */\r\n    //   // compareFunctionFactory: function(sortOrder, columnMeta) {\r\n    //   //   return function(value, nextValue) {\r\n    //   //     if(value > 2000) return -1;\r\n    //   //     return value - nextValue;\r\n    //   //   }\r\n    //   // },\r\n    // },\r\n\r\n    comments: {\r\n      displayDelay: 1000 /* 1초 뒤에 메모가 on */,\r\n    },\r\n\r\n    cell: getComments(),\r\n    afterSetCellMeta: (row, col, key, obj) => {\r\n      if (key === \"comment\") {\r\n        // 기존 데이터 삭제\r\n        let temp = getComments().filter(\r\n          (item) => (item.row === row && item.col === col) === false\r\n        );\r\n        if (obj !== undefined)\r\n          temp.push({ row, col, comment: { value: obj.value } });\r\n        localStorage.setItem(COMMENTS_KEY, JSON.stringify([...temp]));\r\n      }\r\n    },\r\n\r\n    // 6.2.2 미지원\r\n    // beforeSetCellMeta:(row, col, key, value) => {\r\n    //   console.log(\"before\",row, col, key, value);\r\n    // },\r\n\r\n    // afterChange: function(change, source) {\r\n    //   console.log(change, source);\r\n    //   //change [row, col, before, after];\r\n    // },\r\n\r\n    mergeCells: getMergeCells(),\r\n    afterUnmergeCells: (cellRange, auto) => {\r\n      let temp = getMergeCells().filter(\r\n        (item) =>\r\n          (item.row === cellRange.from.row &&\r\n            item.col === cellRange.from.col) === false\r\n      );\r\n\r\n      localStorage.setItem(MERGE_CELLS_KEY, JSON.stringify([...temp]));\r\n    },\r\n\r\n    // search: {\r\n    //   callback: searchResultCounter,\r\n    //   queryMethod: myNewQueryMethod,\r\n    //   //searchResultClass: 'customClass'\r\n    // },\r\n\r\n    // columns: [\r\n    //     {data: \"id\", type: 'numeric'},\r\n    //     {data: \"name\", renderer: redRenderer},\r\n    //     {data: \"isActive\", type: 'checkbox'},\r\n    //     {data: \"date\", type: 'date', dateFormat: 'YYYY-MM-DD'},\r\n    //     {data: \"color\",\r\n    //       type: 'autocomplete', // dropdown\r\n    //       source: [\"yellow\", \"red\", \"orange\", \"green\", \"blue\", \"gray\", \"black\", \"white\"]\r\n    //     },\r\n    //     {\r\n    //       editor: 'select',\r\n    //       selectOptions: ['Kia', 'Nissan', 'Toyota', 'Honda']\r\n    //     },\r\n    //   ],\r\n    \r\n    cells: function(row, col, prop) {\r\n      if (localCellStyle === null) return {};\r\n\r\n      let cellProperties = {};\r\n\r\n      cellProperties.className =\r\n        localCellStyle[row][col].className || \"htCenter htMiddle\"; // undefined 처리\r\n\r\n      cellProperties.renderer = function(instance, td) {\r\n        Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n        td.style.fontWeight = localCellStyle[row][col].style.fontWeight || \"\";\r\n        td.style.fontStyle = localCellStyle[row][col].style.fontStyle || \"\";\r\n        td.style.textDecoration = localCellStyle[row][col].style.textDecoration || \"\";\r\n        td.style.color = localCellStyle[row][col].style.color || \"#000000\";\r\n        td.style.backgroundColor = localCellStyle[row][col].style.backgroundColor || \"#FFFFFF\";\r\n      };\r\n\r\n      return cellProperties;\r\n    },\r\n\r\n    licenseKey: \"non-commercial-and-evaluation\",\r\n  };\r\n\r\n  const setColWidths = (table, setOptions) => {\r\n    let colLength = table.getData()[0].length;\r\n    let widths = [];\r\n\r\n    for (let i = 0; i < colLength; i++) widths.push(table.getColWidth(i));\r\n\r\n    setOptions.cellInfo.colWidths = widths;\r\n\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(setOptions));\r\n  };\r\n\r\n  const setRowHeights = (table, setOptions) => {\r\n    let rowLength = table.getData().length;\r\n    let heights = [];\r\n\r\n    for (let i = 0; i < rowLength; i++) heights.push(table.getRowHeight(i));\r\n\r\n    setOptions.cellInfo.rowHeights = heights;\r\n\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(setOptions));\r\n  };\r\n\r\n  let myTable;\r\n  const makeTable = () => {\r\n    const container = document.getElementById(\"hot-app\");\r\n    container.innerHTML = \"\";\r\n\r\n    myTable = new Handsontable(container, {\r\n      ...options,\r\n      ...myOptions.trueFalseOptions,\r\n      ...myOptions.numberOptions,\r\n      ...myOptions.cellInfo,\r\n    });\r\n\r\n    myTable.addHook(\"afterMergeCells\", function(cellRange, mergeParent, auto) {\r\n      let temp = getMergeCells();\r\n      temp.push(mergeParent);\r\n      temp = temp.filter(\r\n        (item) => myTable.getCellMeta(item.row, item.col).spanned === true\r\n      );\r\n\r\n      localStorage.setItem(MERGE_CELLS_KEY, JSON.stringify([...temp]));\r\n    });\r\n\r\n    myTable.addHook(\"afterColumnResize\", function(col, width) {\r\n      let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n      if (localOptions === null) {\r\n        setColWidths(this, myOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions = JSON.parse(localOptions);\r\n      if (Array.isArray(localOptions.cellInfo.colWidths) === false) {\r\n        setColWidths(this, localOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions.cellInfo.colWidths[col] = width;\r\n      localStorage.setItem(MY_OPTIONS, JSON.stringify(localOptions));\r\n    });\r\n\r\n    myTable.addHook(\"afterRowResize\", function(row, height) {\r\n      let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n      if (localOptions === null) {\r\n        setRowHeights(this, myOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions = JSON.parse(localOptions);\r\n      if (Array.isArray(localOptions.cellInfo.rowHeights) === false) {\r\n        setRowHeights(this, localOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions.cellInfo.rowHeights[row] = height;\r\n      localStorage.setItem(MY_OPTIONS, JSON.stringify(localOptions));\r\n    });\r\n\r\n    myTable.render();\r\n    setMyHandsOnTable(myTable);\r\n\r\n    // search 구현\r\n    // let searchField = document.getElementById(\"search_field\");\r\n    // let resultCount = document.getElementById(\"resultCount\");\r\n\r\n    // Handsontable.dom.addEvent(searchField, \"keyup\", function(event) {\r\n    //   searchResultCount = 0;\r\n\r\n    //   let search = myTable.getPlugin(\"search\");\r\n    //   let queryResult = search.query(this.value);\r\n\r\n    //   console.log(queryResult);\r\n\r\n    //   resultCount.innerText = searchResultCount.toString();\r\n    //   myTable.render();\r\n    // });\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeTable();\r\n  }, [myOptions]);\r\n\r\n  const changeFormat = (value) => {\r\n    value = value || \"\";\r\n    value = value.toString();\r\n    if (value.includes('\"')) return '\"' + value.replace(/\"/g, '\"\"') + '\"';\r\n    if (value.includes(\",\") || value.includes(\"\\n\")) return '\"' + value + '\"';\r\n    return value;\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    let data = myHandsOnTable.getData();\r\n\r\n    let csv = \"\";\r\n    for (let r = 0; r < data.length; r++) {\r\n      let row = data[r].map(changeFormat).join(\",\");\r\n      csv += row + \"\\n\";\r\n    }\r\n\r\n    let fileDown = \"data:csv;charset=utf-8,\" + csv;\r\n    let encodedUri = encodeURI(fileDown);\r\n    let link = document.createElement(\"a\");\r\n\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"handsontable.csv\");\r\n\r\n    document.body.appendChild(link);\r\n\r\n    link.click();\r\n\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <Button\r\n          sx={{ m: 2 }}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={downloadCSV}\r\n        >\r\n          Download CSV\r\n        </Button>\r\n        {/* <input id=\"search_field\" type=\"search\" placeholder=\"search\" />\r\n        <p>\r\n        <span id=\"resultCount\">0</span> results\r\n      </p> */}\r\n        <HandsontableToggleButton\r\n          myHandsOnTable={myHandsOnTable}\r\n          selectedCell={selectedCell}\r\n        />\r\n        <DisplayCellStyle>\r\n          <span>{displayCellInfo}</span>\r\n        </DisplayCellStyle>\r\n        <div id=\"hot-app\" style={{ marginTop: \"13px\" }}></div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomHansOnTable;","import React, { useState, useEffect } from \"react\";\r\nimport CustomHansOnTable from \"./CustomHansOnTable\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport Input from \"@mui/material/Input\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nconst MY_OPTIONS = \"MY_OPTIONS\";\r\n\r\nconst myDefaultOptions = {\r\n  trueFalseOptions: {\r\n    colHeaders: true,\r\n    rowHeaders: true,\r\n    wordWrap: false /* 줄 바꿈 off */,\r\n    manualColumnResize: true,\r\n    manualRowResize: true,\r\n    manualColumnMove: true,\r\n    manualRowMove: true,\r\n    allowInsertColumn: true,\r\n    allowInsertRow: true,\r\n    allowRemoveColumn: true,\r\n    allowRemoveRow: true,\r\n    autoWrapCol: true /* 마지막 셀 아래에서 다음 셀 위로 이동 */,\r\n    autoWrapRow: true /* 마지막 셀 옆에서 다음 셀 처음으로 이동 */,\r\n    dragToScroll: true /* 표를 클릭 후 드래그를 할 때, 같이 스크롤 되는지 여부 */,\r\n    persistentState: false /* 열 정렬 상태, 열 위치 및 열 크기를 로컬 스토리지에 저장 */,\r\n    // outsideClickDeselects: false /* 셀 외부 클릭 시, 셀 선택 해제 */,\r\n    readOnly: false /* true : 모든 셀을 readOnly로 설정*/,\r\n    enterBeginsEditing: true /* true : 엔터 클릭 시 편집 모드, false : 다음 셀로 이동 */,\r\n    copyable: true /* 복사 가능 여부 */,\r\n    copyPaste: true /* 복사, 붙여넣기 가능 여부 */,\r\n    undo: true /* false : ctrl + z 비활성화 */,\r\n    trimWhitespace: false /* 자동 trim() 실행 후 셀에 저장 */,\r\n    contextMenu: true /* 마우스 왼쪽 버튼 클릭 시 컨텍스트 메뉴 */,\r\n    comments: true /* 주석, 메모 기능 context menu에 추가 */,\r\n    manualColumnFreeze: true /* freezeColumn context menu에 추가 */,\r\n    observeChanges: true,\r\n  },\r\n\r\n  numberOptions: {\r\n    width: 1000,\r\n    height: 1000,\r\n    startCols: 5 /* data가 없는 경우 기본 설정 */,\r\n    startRows: 5 /* data가 없는 경우 기본 설정 */,\r\n    maxCols: 100 /* 주어진 값보다 큰 Column은 제거 */,\r\n    maxRows: 100 /* 주어진 값보다 큰 Row는 제거 */,\r\n    minCols: 1 /* 최소한의 Column */,\r\n    minRows: 1 /* 최소한의 Row */,\r\n    minSpareRows: 0 /* 빈 열 자동 추가 */,\r\n    minSpareCols: 0 /* 빈 행 자동 추가 */,\r\n    fixedColumnsLeft: 0,\r\n    fixedRowsTop: 0,\r\n    fixedRowsBottom: 0,\r\n    rowHeaderWidth: 55 /* 행 헤더 너비 */,\r\n  },\r\n\r\n  cellInfo: {\r\n    colWidths: 60,\r\n    rowHeights: 25,\r\n  },\r\n};\r\n\r\nconst MyHandsonTable = () => {\r\n  const [myOptions, setMyOptions] = useState(myDefaultOptions);\r\n\r\n  const [state, setState] = useState({ right: false });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const changeTrueFalseOptions = (option, value) => {\r\n    console.log(myOptions);\r\n    let temp = { ...myOptions };\r\n    temp.trueFalseOptions[option] = !value;\r\n    setMyOptions(temp);\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(temp));\r\n  };\r\n\r\n  const makeTrueFalseCheckBox = () => {\r\n    let pair = Object.entries(myOptions.trueFalseOptions);\r\n\r\n    pair = pair.map((item) => [item[0], Boolean(item[1])]);\r\n\r\n    return pair.map((item, idx) => (\r\n      <FormControlLabel\r\n        key={idx}\r\n        control={<Checkbox checked={item[1]} />}\r\n        label={item[0]}\r\n        onChange={() => changeTrueFalseOptions(item[0], item[1])}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const changeNumberOptions = (option, value) => {\r\n    let temp = { ...myOptions };\r\n\r\n    if (isNaN(Number(value))) return;\r\n\r\n    temp.numberOptions[option] = Number(value);\r\n    setMyOptions(temp);\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(temp));\r\n  };\r\n\r\n  const makeNumberInput = () => {\r\n    let pair = Object.entries(myOptions.numberOptions);\r\n\r\n    pair = pair.map((item) => [item[0], Number(item[1])]);\r\n\r\n    return pair.map((item, idx) => (\r\n      <FormControl key={idx} sx={{ m: 2 }} variant=\"standard\">\r\n        <InputLabel htmlFor=\"component-error\">{item[0]}</InputLabel>\r\n        <Input\r\n          value={item[1]}\r\n          onChange={(e) => changeNumberOptions(item[0], e.target.value)}\r\n        />\r\n      </FormControl>\r\n    ));\r\n  };\r\n\r\n  const list = () => (\r\n    <Box sx={{ width: 600 }}>\r\n      <Box sx={{ m: 2, flexDirection: \"row\" }}>{makeTrueFalseCheckBox()}</Box>\r\n\r\n      <Divider />\r\n\r\n      <Box sx={{ m: 2, flexDirection: \"row\" }}>\r\n        <FormHelperText sx={{ color: \"blue\" }}>\r\n          0 이상 숫자를 입력하세요.\r\n        </FormHelperText>\r\n        {makeNumberInput()}\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  const initLocalStorage = () => {\r\n    let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n    if (localOptions === null) return;\r\n\r\n    setMyOptions(JSON.parse(localOptions));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initLocalStorage();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {[\"right\"].map((anchor) => (\r\n          <React.Fragment key={anchor}>\r\n            <Button\r\n              sx={{ m: 2 }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={toggleDrawer(anchor, true)}\r\n            >\r\n              Options Setting\r\n            </Button>\r\n            <Drawer\r\n              anchor={anchor}\r\n              open={state[anchor]}\r\n              onClose={toggleDrawer(anchor, false)}\r\n            >\r\n              {list()}\r\n            </Drawer>\r\n          </React.Fragment>\r\n        ))}\r\n        <CustomHansOnTable myOptions={myOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyHandsonTable;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport FormatAlignLeftIcon from \"@mui/icons-material/FormatAlignLeft\";\r\nimport FormatAlignCenterIcon from \"@mui/icons-material/FormatAlignCenter\";\r\nimport FormatAlignRightIcon from \"@mui/icons-material/FormatAlignRight\";\r\n//import FormatAlignJustifyIcon from \"@mui/icons-material/FormatAlignJustify\";\r\nimport VerticalAlignBottomIcon from \"@mui/icons-material/VerticalAlignBottom\";\r\nimport VerticalAlignCenterIcon from \"@mui/icons-material/VerticalAlignCenter\";\r\nimport VerticalAlignTopIcon from \"@mui/icons-material/VerticalAlignTop\";\r\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\";\r\nimport FormatItalicIcon from \"@mui/icons-material/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@mui/icons-material/FormatUnderlined\";\r\nimport FormatColorFillIcon from \"@mui/icons-material/FormatColorFill\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ColorizeIcon from \"@mui/icons-material/Colorize\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\n\r\nimport { CompactPicker } from \"react-color\";\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n  \"& .MuiToggleButtonGroup-grouped\": {\r\n    margin: theme.spacing(0.5),\r\n    border: 0,\r\n    \"&.Mui-disabled\": {\r\n      border: 0,\r\n    },\r\n    \"&:not(:first-of-type)\": {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    \"&:first-of-type\": {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MyTextEditorToggleButton = () => {\r\n  const [horizontalAlignment, setHorizontalAlignment] = useState(\"left\");\r\n  const [verticalAlignment, setVerticalAlignment] = useState(\"middle\");\r\n  const [formats, setFormats] = useState(() => []);\r\n\r\n  const [showCompactPicker, setShowCompactPicker] = useState(false); \r\n  const [pickerPosition, setPickerPosition] = useState({ top: 0, left: 0 }); \r\n  const [fontColor, setFontColor] = useState(\"#000000\");\r\n  const [bgColor, setBgColor] = useState(\"#FFFFFF\");\r\n\r\n  const handleAlignment = (event, newAlignment, type) => {\r\n    console.log(newAlignment, type);\r\n    if (type === \"horizontal\") setHorizontalAlignment(newAlignment);\r\n    else if (type === \"vertical\") setVerticalAlignment(newAlignment);\r\n  };\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    console.log(newFormats);\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  const handleToggleCompactPicker = (event, type) => {\r\n    const iconButton = event.currentTarget;\r\n    const rect = iconButton.getBoundingClientRect();\r\n    const pickerTop = rect.bottom + window.scrollY;\r\n    const pickerLeft = rect.left + window.scrollX;\r\n\r\n    setPickerPosition({ top: pickerTop, left: pickerLeft });\r\n    setShowCompactPicker((prev) => !prev);\r\n  };\r\n\r\n  const handleChangeComplete = (color, event) => {\r\n    let colorType = formats.includes(\"fontColor\") ? \"fontColor\" : \"bgColor\";\r\n\r\n    console.log(colorType, color.hex);\r\n\r\n    if (colorType === \"fontColor\") setFontColor(color.hex);\r\n    else setBgColor(color.hex);\r\n  };\r\n\r\n  const getColorPicker = () => {\r\n    let colorType = formats.includes(\"fontColor\") ? \"fontColor\" : \"bgColor\";\r\n    return (\r\n      <CompactPicker\r\n        color={colorType === \"fontColor\" ? fontColor : bgColor}\r\n        onChangeComplete={handleChangeComplete}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    let fms = formats.filter(\r\n      (item) => (item === \"fontColor\" || item === \"bgColor\") === false\r\n    );\r\n    setFormats(fms);\r\n\r\n    setShowCompactPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <Paper\r\n          elevation={0}\r\n          sx={{\r\n            display: \"flex\",\r\n            border: (theme) => `1px solid ${theme.palette.divider}`,\r\n            flexWrap: \"wrap\",\r\n            width: \"540px\",\r\n          }}\r\n        >\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={horizontalAlignment}\r\n            exclusive\r\n            onChange={(e, alignment) =>\r\n              handleAlignment(e, alignment, \"horizontal\")\r\n            }\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n              <FormatAlignLeftIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"center\" aria-label=\"centered\">\r\n              <FormatAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n              <FormatAlignRightIcon />\r\n            </ToggleButton>\r\n            {/* <ToggleButton value=\"justify\" aria-label=\"justified\">\r\n              <FormatAlignJustifyIcon />\r\n            </ToggleButton> */}\r\n          </StyledToggleButtonGroup>\r\n\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={verticalAlignment}\r\n            exclusive\r\n            onChange={(e, alignment) =>\r\n              handleAlignment(e, alignment, \"vertical\")\r\n            }\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"up\" aria-label=\"left aligned\">\r\n              <VerticalAlignBottomIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"middle\" aria-label=\"centered\">\r\n              <VerticalAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"bottom\" aria-label=\"right aligned\">\r\n              <VerticalAlignTopIcon />\r\n            </ToggleButton>\r\n          </StyledToggleButtonGroup>\r\n\r\n          <Divider flexItem orientation=\"vertical\" sx={{ mx: 0.5, my: 1 }} />\r\n\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={formats}\r\n            onChange={handleFormat}\r\n            aria-label=\"text formatting\"\r\n          >\r\n            <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n              <FormatBoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n              <FormatItalicIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"underlined\" aria-label=\"underlined\">\r\n              <FormatUnderlinedIcon />\r\n            </ToggleButton>\r\n\r\n            <ToggleButton\r\n              value=\"fontColor\"\r\n              aria-label=\"fontColor\"\r\n              onClick={(e) => handleToggleCompactPicker(e, \"fontColor\")} \r\n            >\r\n              <ColorizeIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value=\"bgColor\"\r\n              aria-label=\"bgColor\"\r\n              onClick={(e) => handleToggleCompactPicker(e, \"bgColor\")}\r\n            >\r\n              <FormatColorFillIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n          </StyledToggleButtonGroup>\r\n        </Paper>\r\n\r\n        {showCompactPicker && (\r\n          <div\r\n            className=\"compact-picker-container\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: pickerPosition.top + \"px\",\r\n              left: pickerPosition.left + \"px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"fixed\",\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                bottom: \"0px\",\r\n                left: \"0px\",\r\n              }}\r\n              onClick={handleClose}\r\n            />\r\n            {getColorPicker()}\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTextEditorToggleButton;\r\n","import React from \"react\";\r\nimport { CommentSection } from \"react-comments-section\";\r\n//import 'react-comments-section/dist/index.css';\r\nimport \"../css/comment.css\";\r\n\r\nconst ReactComments = () => {\r\n  const data = [\r\n    {\r\n      userId: \"02b\",\r\n      comId: \"017\",\r\n      fullName: \"Lily\",\r\n      userProfile: \"https://www.linkedin.com/in/riya-negi-8879631a9/\",\r\n      text: \"I think you have a point🤔\",\r\n      avatarUrl: \"https://ui-avatars.com/api/name=Lily&background=random\",\r\n      replies: [],\r\n    },\r\n  ];\r\n\r\n  const onSubmitAction = (data) => {\r\n    console.log(\"check submit, \", data);\r\n  };\r\n\r\n  // const onDeleteAction\r\n  // const onReplyAction\r\n  // const onEditAction\r\n\r\n  const currentData = (data) => {\r\n    console.log(\"current data\", data);\r\n  };\r\n\r\n  const customNoComment = () => (\r\n    <div className=\"no-com\">Sheessh! Zero Comments posted here!</div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <CommentSection\r\n        currentUser={{\r\n          currentUserId: \"01a\",\r\n          currentUserImg:\r\n            \"https://ui-avatars.com/api/name=Riya&background=random\",\r\n          currentUserProfile:\r\n            \"https://www.linkedin.com/in/riya-negi-8879631a9/\",\r\n          currentUserFullName: \"Riya Negi\",\r\n        }}\r\n        logIn={{\r\n          loginLink: \"http://localhost:3001/\",\r\n          signupLink: \"http://localhost:3001/\",\r\n        }}\r\n        commentData={data}\r\n        currentData={currentData}\r\n        onSubmitAction={onSubmitAction}\r\n        hrStyle={{ border: \"0.5px solid #ff0072\" }}\r\n        inputStyle={{ border: \"1px solid rgb(208 208 208)\" }}\r\n        formStyle={{ backgroundColor: \"white\" }}\r\n        submitBtnStyle={{\r\n          border: \"1px solid black\",\r\n          backgroundColor: \"black\",\r\n          padding: \"7px 15px\",\r\n        }}\r\n        cancelBtnStyle={{\r\n          border: \"1px solid gray\",\r\n          backgroundColor: \"gray\",\r\n          color: \"white\",\r\n          padding: \"7px 15px\",\r\n        }}\r\n        replyInputStyle={{ borderBottom: \"1px solid black\", color: \"black\" }}\r\n        advancedInput={true}\r\n        removeEmoji={false}\r\n        customNoComment={() => customNoComment()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactComments;\r\n","export const login = (loginInfo) => {\r\n  return {\r\n    type: \"LOGIN\",\r\n    loginInfo,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: \"LOGOUT\",\r\n  };\r\n};","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../actions/loginAction\";\r\n\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nconst clientID = process.env.REACT_APP_CLIENT_ID;\r\n\r\nconst GitHubLoginCallback = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const getAccessToken = async (code) => {\r\n    try {\r\n      let server = `http://192.168.55.120:3002`;\r\n      let accessInfo = await axios.get(\r\n        `${server}/githubLogin?code=${code}&clientID=${clientID}`\r\n      );\r\n\r\n      let token = accessInfo.data.token;\r\n\r\n      const userResponse = await axios.get(\"https://api.github.com/user\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      const userData = userResponse.data;\r\n      const avatarUrl = userData.avatar_url;\r\n      const loginID = userData.login;\r\n\r\n      console.log(userData);\r\n      console.log(avatarUrl);\r\n      console.log(loginID);\r\n\r\n      let loginInfo = {\r\n        avatarUrl, loginID\r\n      }\r\n\r\n      dispatch(actions.login(loginInfo));\r\n      localStorage.setItem(\"LOGIN_INFO\", JSON.stringify(loginInfo));     \r\n      navigate('/',  { replace: true }); \r\n    } catch (e) {\r\n      console.log(\"error \", e);\r\n    }\r\n  };\r\n\r\n  const getCode = () => {\r\n    let qs = queryString.parse(window.location.search);\r\n    let code = qs.code;\r\n    getAccessToken(code);\r\n  };\r\n\r\n  useEffect(() => getCode(), []);\r\n\r\n  return <div>{\"로그인 시도 중...\"}</div>;\r\n};\r\n\r\nexport default GitHubLoginCallback;\r\n","import { Cookies } from \"react-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const setCookies = (key, value, options) => {\r\n  return cookies.set(key, value, {...options})\r\n}\r\n\r\nexport const getCookies = (key) => {\r\n  return cookies.get(key)\r\n}\r\n\r\nexport const removeCookies = (key) => {\r\n  return cookies.remove(key);\r\n}","import axios from \"axios\";\r\nimport { Octokit } from \"@octokit/rest\";\r\n\r\nimport * as ck from \"./cookielibrary.js\";\r\n\r\nconst myKey = process.env.REACT_APP_MY_TOKEN;\r\nconst repo = `auto-test`;\r\n\r\nconst getSHA = async (path) => {\r\n  const octokit = new Octokit({\r\n    auth: myKey,\r\n  });\r\n\r\n  try {\r\n    const result = await octokit.request(\r\n      `GET /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        owner: \"bloodstrawberry\",\r\n        repo: `${repo}`,\r\n        path: `${path}`,\r\n      }\r\n    );\r\n  \r\n    return result.data.sha;\r\n  }\r\n\r\n  catch (e) {\r\n    console.log(\"error : \", e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const fileDelete = async (path) => {\r\n  let sha = await getSHA(path);\r\n  if(sha === undefined) return undefined;\r\n  try {\r\n    const octokit = new Octokit({\r\n      auth: myKey,\r\n    });\r\n\r\n    const result = await octokit.request(\r\n      `DELETE /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        owner: \"bloodstrawberry\",\r\n        repo,\r\n        path,\r\n        message: \"delete!!\",\r\n        sha,\r\n      }\r\n    );\r\n\r\n    return result;\r\n  } catch (e) {\r\n    console.log(\"error : \", e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const fileRead = async (path) => {\r\n  try {\r\n    const octokit = new Octokit({\r\n      auth: myKey,\r\n    });\r\n\r\n    const result = await octokit.request(\r\n      `GET /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        owner: \"bloodstrawberry\",\r\n        repo: `${repo}`,\r\n        path: `${path}`,\r\n        encoding: \"utf-8\",\r\n        decoding: \"utf-8\",\r\n      }\r\n    );\r\n    return result;\r\n  } catch (e) {\r\n    console.log(\"error : \", e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const fileCreate = async (contents, path) => {\r\n  const octokit = new Octokit({\r\n    auth: myKey,\r\n  });\r\n\r\n  try {\r\n    const result = await octokit.request(\r\n      `PUT /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        owner: \"bloodstrawberry\",\r\n        repo: `${repo}`,\r\n        path: `${path}`,\r\n        message: \"make comments\",\r\n        committer: {\r\n          name: \"bloodstrawberry\",\r\n          email: \"bloodstrawberry@github.com\",\r\n        },\r\n        content: `${btoa(unescape(encodeURIComponent(`${contents}`)))}`,\r\n        headers: {\r\n          \"X-GitHub-Api-Version\": \"2022-11-28\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return result.status;\r\n  } catch (e) {\r\n    console.log(\"error : \", e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const loginCheck = async (setLoginStatus) => {\r\n  let token = ck.getCookies(\"GITHUB_TOKEN\");\r\n  try {\r\n    const response = await axios.get(\"https://api.github.com/user\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    console.log(response);\r\n    setLoginStatus(true);\r\n  } catch (error) {\r\n    console.error(\"Error fetching user data:\", error);\r\n    setLoginStatus(false);\r\n  }\r\n};\r\n\r\nexport const getLoginStatus = async () => {\r\n  let token = ck.getCookies(\"GITHUB_TOKEN\");\r\n  try {\r\n    const response = await axios.get(\"https://api.github.com/user\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    console.log(response);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error fetching user data:\", error);\r\n    return false;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst ReactCookie = () => {\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"githubToken\"]);\r\n  const [token, setToken] = useState(cookies.githubToken || null);\r\n\r\n  useEffect(() => {\r\n    const storedToken = cookies.githubToken;\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n    }\r\n  }, [cookies.githubToken]);\r\n\r\n  const handleLogin = () => {\r\n    // github oauth callback으로 token 획득\r\n    const receivedToken = \"received_token_from_oauth\";\r\n\r\n    setCookie(\"githubToken\", receivedToken, {\r\n      maxAge: 3, // seconds\r\n      // secure: true, // https 연결에만 전송\r\n      // httpOnly: true, // 클라이언트에서 read 불가\r\n    });\r\n\r\n    setToken(receivedToken);\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    console.log(cookies);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    removeCookie(\"githubToken\");\r\n    setToken(null);\r\n  };\r\n\r\n  const test = async () => {\r\n    axios.defaults.withCredentials = true;\r\n    // const userResponse = await axios.get(\r\n    //   \"http://192.168.55.120:3002/cookietest\",\r\n    //   {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${token}`,\r\n    //     },\r\n    //   },\r\n    //   { withCredentials: true }\r\n    // );\r\n    // console.log(userResponse);\r\n\r\n    let username = \"hello\";\r\n    let password = \"world\";\r\n\r\n    axios\r\n      .post(\r\n        \"http://192.168.55.120:3002/cookietest\",\r\n        { profile: { username: username, password: password } },\r\n        { withCredentials: true }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {token ? <p>login</p> : <p>logout</p>}\r\n      <button onClick={handleLogin}>로그인</button>\r\n      <button onClick={handleCheck}>쿠키 확인</button>\r\n      <button onClick={handleLogout}>로그아웃</button>\r\n      <button onClick={test}>test</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactCookie;\r\n","/* global BigInt */\r\nimport React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst ERROR_CODE = \"Error\";\r\n\r\nconst isValidIPv4 = (ipv4) => {\r\n  const pattern = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\r\n  const parts = ipv4.match(pattern);\r\n\r\n  if (!parts) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 1; i <= 4; i++) {\r\n    const octet = parseInt(parts[i], 10);\r\n    if (octet < 0 || octet > 255 || (octet === 0 && parts[i].length > 1)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst isValidIPv6 = (ipv6) => {\r\n  const pattern= /^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$/;  \r\n  return pattern.test(ipv6);\r\n}\r\n\r\nconst isValidIPv6Short = (ipv6) => {\r\n  const pattern = /^(([A-Fa-f0-9]{1,4}:){1,7}|:)((:[A-Fa-f0-9]{1,4}){1,7}|:)$/;\r\n  return pattern.test(ipv6);\r\n}\r\n\r\nconst integerToIpv4 = (value) => {\r\n  let maxValue = 4294967295;\r\n  let integer = Number(value);\r\n\r\n  if (isNaN(integer) === true || integer < 0 || integer > maxValue) {\r\n    return ERROR_CODE;\r\n  }\r\n\r\n  return (\r\n    ((integer >> 24) & 0xff) + \".\" +\r\n    ((integer >> 16) & 0xff) + \".\" +\r\n    ((integer >> 8) & 0xff) + \".\" +\r\n    (integer & 0xff)\r\n  );\r\n};\r\n\r\nconst ipv4ToInteger = (ipv4) => {\r\n  if(isValidIPv4(ipv4) === false) return ERROR_CODE; \r\n\r\n  const octets = ipv4.split('.').map(Number); \r\n  return (octets[0] * 256 ** 3) + (octets[1] * 256 ** 2) + (octets[2] * 256 ** 1) + (octets[3] * 256 ** 0);\r\n};\r\n\r\nconst integerToIpv6 = (value) => {\r\n  let integer;\r\n  try {\r\n    integer = BigInt(value);\r\n  } catch (e) {\r\n    return ERROR_CODE;\r\n  }\r\n\r\n  let maxValue = BigInt(340282366920938463463374607431768211455);\r\n  if (integer < 0 || integer > maxValue) return ERROR_CODE;\r\n\r\n  let hexString = integer.toString(16);\r\n  while (hexString.length < 32) {\r\n    hexString = \"0\" + hexString;\r\n  }\r\n\r\n  const parts = [];\r\n  for (let i = 0; i < 8; i++) {\r\n    parts.push(hexString.slice(i * 4, (i + 1) * 4));\r\n  }\r\n\r\n  return parts.join(\":\");\r\n};\r\n\r\nconst ipv6ToInteger = (ipv6) => {\r\n  if(isValidIPv6(ipv6) === false) return ERROR_CODE; \r\n\r\n  const parts = ipv6.split(':');\r\n  \r\n  let result = BigInt(0);\r\n  for (let i = 0; i < parts.length; i++) {\r\n    result = (result << BigInt(16)) + BigInt(\"0x\" + parts[i]);\r\n  }\r\n\r\n  return String(result);\r\n};\r\n\r\nconst ipv6LongToShort = (ipv6) => {\r\n  if(isValidIPv6(ipv6) === false) return ERROR_CODE;\r\n\r\n  const blocks = ipv6.split(\":\");\r\n\r\n  for (let i = 0; i < blocks.length; i++) {\r\n    if (blocks[i] === \"0000\") {\r\n      blocks[i] = \"\";\r\n    }\r\n  }\r\n\r\n  return blocks.join(\":\").replace(/:{3,}/g, \"::\");\r\n};\r\n\r\nconst ipv6ShortToLong = (ipv6) => {\r\n  if(isValidIPv6Short(ipv6) === false) return ERROR_CODE;\r\n  let blocks = ipv6.split(':');\r\n\r\n  if (blocks.length === 8) {\r\n    return ipv6; \r\n  }\r\n\r\n  let index = blocks.indexOf('');\r\n\r\n  blocks.splice(index, 1, ...Array(8 - blocks.length + 1).fill('0'));\r\n\r\n  let expandedIPv6 = blocks.map(block => {\r\n    while (block.length < 4) {\r\n      block = '0' + block;\r\n    }\r\n    return block;\r\n  }).join(':'); \r\n\r\n  return expandedIPv6;\r\n}\r\n\r\nconst deleteFrontZero = (str) => {\r\n  if (str === \"0\") return str;\r\n  return str.replace(/^0+/, \"\");\r\n};\r\n\r\nconst IPConverter = () => {\r\n  const [info, setInfo] = useState({\r\n    integer: \"0\",\r\n    ipv4: \"0.0.0.0\",\r\n    ipv6_short: \"::\",\r\n    ipv6_long: \"0000:0000:0000:0000:0000:0000:0000:0000\",\r\n  });\r\n\r\n  const changeInteger = (value) => {\r\n    let ipv6 = integerToIpv6(value);\r\n\r\n    setInfo({\r\n      integer: deleteFrontZero(String(value)),\r\n      ipv4: integerToIpv4(value),\r\n      ipv6_short: ipv6LongToShort(ipv6),\r\n      ipv6_long: ipv6,\r\n    });\r\n  };\r\n\r\n  const changeIpv4 = (value) => {\r\n    let integer = ipv4ToInteger(value);\r\n    let ipv6 = integerToIpv6(integer);\r\n\r\n    setInfo({\r\n      integer: integer,\r\n      ipv4: value,\r\n      ipv6_short: ipv6LongToShort(ipv6),\r\n      ipv6_long: ipv6,\r\n    });\r\n  };\r\n\r\n  const changeIpv6Short = (value) => {\r\n    let ipv6Long = ipv6ShortToLong(value);    \r\n    let bigInteger = ipv6ToInteger(ipv6Long);\r\n\r\n    setInfo({\r\n      integer: bigInteger,\r\n      ipv4: integerToIpv4(bigInteger),\r\n      ipv6_short: value,\r\n      ipv6_long: ipv6Long,\r\n    });\r\n  }\r\n\r\n  const changeIpv6Long = (value) => {\r\n    let bigInteger = ipv6ToInteger(value);\r\n\r\n    setInfo({\r\n      integer: bigInteger,\r\n      ipv4: integerToIpv4(bigInteger),\r\n      ipv6_short: ipv6LongToShort(value),\r\n      ipv6_long: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        component=\"form\"\r\n        sx={{ m: 5, display: \"flex\", flexDirection: \"column\", width: \"800px\" }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          sx={{ marginBottom: 3 }}\r\n          color={info.integer === ERROR_CODE ? \"error\" : \"primary\"}\r\n          focused\r\n          error={false}\r\n          label=\"Integer\"\r\n          value={info.integer}\r\n          onChange={(e) => changeInteger(e.target.value)}\r\n        />\r\n        <TextField\r\n          sx={{ marginBottom: 3 }}\r\n          color={info.ipv4 === ERROR_CODE ? \"error\" : \"primary\"}\r\n          focused\r\n          error={false}\r\n          label=\"IPv4\"\r\n          value={info.ipv4}\r\n          onChange={(e) => changeIpv4(e.target.value)}\r\n        />\r\n        <TextField\r\n          sx={{ marginBottom: 3 }}\r\n          color={info.ipv6_short === ERROR_CODE ? \"error\" : \"success\"}\r\n          focused\r\n          error={false}\r\n          label=\"IPv6 (short)\"\r\n          value={info.ipv6_short}\r\n          onChange={(e) => changeIpv6Short(e.target.value)}\r\n        />\r\n        <TextField\r\n          sx={{ marginBottom: 3 }}\r\n          color={info.ipv6_long === ERROR_CODE ? \"error\" : \"success\"}\r\n          focused\r\n          error={false}\r\n          label=\"Ipv6 (long)\"\r\n          value={info.ipv6_long}\r\n          onChange={(e) => changeIpv6Long(e.target.value)}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IPConverter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\nimport ImageListItemBar from \"@mui/material/ImageListItemBar\";\r\nimport ListSubheader from \"@mui/material/ListSubheader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\n\r\n// upload button\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst VisuallyHiddenInput = styled(\"input\")({\r\n  clip: \"rect(0 0 0 0)\",\r\n  clipPath: \"inset(50%)\",\r\n  height: 1,\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  bottom: 0,\r\n  left: 0,\r\n  whiteSpace: \"nowrap\",\r\n  width: 1,\r\n});\r\n\r\nconst serverUpload = (image) => {\r\n  const formData = new FormData();\r\n  formData.append(\"image\", image);\r\n  console.log(image);\r\n  let server = `http://192.168.55.120:3002`;\r\n  axios\r\n    .post(`${server}/multer`, formData)\r\n    .then((res) => console.log(res.data))\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst ReactImageList = () => {\r\n  const [itemData, setItemData] = useState([]);\r\n\r\n  const handleFileUpload = (e) => {\r\n    const selectedImages = e.target.files;\r\n\r\n    const uploadImageWithDelay = async () => {\r\n      serverUpload(selectedImages[0]);\r\n      for (let i = 1; i < selectedImages.length; i++) {\r\n        await new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            serverUpload(selectedImages[i]);\r\n            resolve();\r\n          }, 1000); // 1초 delay\r\n        });\r\n      }\r\n    };\r\n\r\n    uploadImageWithDelay();\r\n    e.target.value = \"\"; // 같은 파일 upload를 위한 처리\r\n  };\r\n\r\n  const fileLoad = async () => {\r\n    let server = `http://192.168.55.120:3002`;\r\n    fetch(`${server}/getImagePath`) // 실제로는 이미지가 저장된 경로를 얻는 API 엔드포인트로 변경\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setItemData(data.imagePath);\r\n    })\r\n    .catch((error) => {\r\n      console.error('이미지 경로 가져오기 실패:', error);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fileLoad();\r\n  }, [])\r\n\r\n  return (\r\n    <Box sx={{ m: 3 }}>\r\n      <Button\r\n        component=\"label\"\r\n        variant=\"contained\"\r\n        startIcon={<CloudUploadIcon />}\r\n        onChange={handleFileUpload}\r\n      >\r\n        Upload file\r\n        <VisuallyHiddenInput type=\"file\" accept=\"image/*\" multiple />\r\n      </Button>\r\n      <ImageList sx={{ width: 248 * 3 }} cols={3}>\r\n        <ImageListItem key=\"Subheader\" cols={3}>\r\n          <ListSubheader component=\"div\">GitHub Images Directory</ListSubheader>\r\n        </ImageListItem>\r\n        {itemData.map((item) => (\r\n          <ImageListItem key={item.img}>\r\n            <img\r\n              srcSet={`${item.img}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n              src={`${item.img}?w=248&fit=crop&auto=format`}\r\n              alt={item.title}\r\n              loading=\"lazy\"\r\n            />\r\n            <ImageListItemBar\r\n              title={item.title}\r\n              subtitle={item.author}\r\n              actionIcon={\r\n                <IconButton\r\n                  sx={{ color: \"rgba(255, 255, 255, 0.54)\" }}\r\n                  aria-label={`info about ${item.title}`}\r\n                >\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReactImageList;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Capture = () => {\r\n  const [quadrant, setQuadrant] = useState(null);\r\n  const [images, setImages] = useState(Array(4).fill(null));\r\n\r\n  const handleImagePaste = async () => {\r\n    if (quadrant === null) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const clipboardItems = await navigator.clipboard.read();\r\n\r\n      for (const item of clipboardItems) {\r\n        if (\r\n          item.types.includes(\"image/png\") ||\r\n          item.types.includes(\"image/jpeg\")\r\n        ) {\r\n          const blob = await item.getType(\"image/png\" || \"image/jpeg\");\r\n          const reader = new FileReader();\r\n\r\n          reader.onload = () => {\r\n            setImages((prevImages) => {\r\n              const newImages = [...prevImages];\r\n              newImages[quadrant] = reader.result;\r\n              return newImages;\r\n            });\r\n            setQuadrant(null);\r\n          };\r\n\r\n          reader.readAsDataURL(blob);\r\n          break;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error reading clipboard:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAreaClick = (newQuadrant) => {\r\n    setQuadrant(newQuadrant);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\", // Col 1 : 1 분할\r\n        gridTemplateRows: \"1fr 1fr\", // Row 1 : 1 분할\r\n        height: \"500px\",\r\n      }}\r\n    >\r\n      {[0, 1, 2, 3].map((area) => (\r\n        <div\r\n          key={area}\r\n          style={{\r\n            border: \"1px solid #ddd\",\r\n            padding: \"20px\",\r\n            textAlign: \"center\",\r\n            backgroundColor: quadrant === area ? \"#e0e0e0\" : \"transparent\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => handleAreaClick(area)}\r\n          onPaste={handleImagePaste}\r\n        >\r\n          {images[area] && <img src={images[area]} />}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Capture;","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// GitHub RESTful API\r\nimport { Octokit } from \"@octokit/rest\";\r\n\r\n// Toast UI Editor\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\"; // Viewer css\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport Viewer from \"@toast-ui/editor/dist/toastui-editor-viewer\";\r\n\r\n// Dark Theme 적용\r\n// import '@toast-ui/editor/dist/toastui-editor.css';\r\n// import '@toast-ui/editor/dist/theme/toastui-editor-dark.css';\r\n\r\n// Color Syntax Plugin\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\n\r\n// Table Merged Cell Plugin\r\nimport \"@toast-ui/editor-plugin-table-merged-cell/dist/toastui-editor-plugin-table-merged-cell.css\";\r\nimport tableMergedCell from \"@toast-ui/editor-plugin-table-merged-cell\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst colorSyntaxOptions = {\r\n  preset: [\r\n    \"#333333\", \"#666666\", \"#FFFFFF\", \"#EE2323\", \"#F89009\", \"#009A87\", \"#006DD7\", \"#8A3DB6\",\r\n    \"#781B33\", \"#5733B1\", \"#953B34\", \"#FFC1C8\", \"#FFC9AF\", \"#9FEEC3\", \"#99CEFA\", \"#C1BEF9\",\r\n  ],\r\n};\r\n\r\n//const CONTENT_KEY = \"CONTENT_KEY\";\r\n\r\nlet myKey = process.env.REACT_APP_MY_TOKEN;\r\n\r\nconst getCurrentDateTime = () => {\r\n  const now = new Date();\r\n  const year = now.getFullYear();\r\n  const month = String(now.getMonth() + 1).padStart(2, '0');\r\n  const day = String(now.getDate()).padStart(2, '0');\r\n  const hours = String(now.getHours()).padStart(2, '0');\r\n  const minutes = String(now.getMinutes()).padStart(2, '0');\r\n  const seconds = String(now.getSeconds()).padStart(2, '0');\r\n\r\n  return `${year}_${month}_${day}_${hours}_${minutes}_${seconds}`;\r\n}\r\n\r\nconst extractDataUrlImages = (inputString) => {\r\n  // 정규식을 사용하여 Data URL 형식 찾기\r\n  const regex = /!\\[image\\.png\\]\\(data:image\\/png;base64,([^)]*)\\)/g;\r\n  const matches = inputString.match(regex);\r\n\r\n  if (matches) {\r\n      const imageDataArray = matches.map(match => match.replace(regex, '$1'));\r\n      return {matches, imageDataArray};\r\n  } else {\r\n      return [];\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const editorRef = useRef(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const repo = \"auto-test\";\r\n  const path = \"README.md\";\r\n\r\n  const getSHA = async (octokit) => {\r\n    const result = await octokit.request(\r\n      `GET /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        owner: \"bloodstrawberry\",\r\n        repo: `${repo}`,\r\n        path: `${path}`,\r\n      }\r\n    );\r\n\r\n    return result.data.sha;\r\n  };\r\n\r\n  const fileWrite = async (contents) => {\r\n    const octokit = new Octokit({\r\n      auth: myKey,\r\n    });\r\n\r\n    const currentSHA = await getSHA(octokit);\r\n    const result = await octokit.request(\r\n      `PUT /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        owner: \"bloodstrawberry\",\r\n        repo: `${repo}`,\r\n        path: `${path}`,\r\n        message: \"commit message!\",\r\n        sha: currentSHA,\r\n        committer: {\r\n          name: \"bloodstrawberry\",\r\n          email: \"bloodstrawberry@github.com\",\r\n        },\r\n        content: `${btoa(unescape(encodeURIComponent(`${contents}`)))}`,\r\n        headers: {\r\n          \"X-GitHub-Api-Version\": \"2022-11-28\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(result.status);\r\n  };\r\n\r\n  const fileRead = async () => {\r\n    const octokit = new Octokit({\r\n      auth: myKey,\r\n    });\r\n\r\n    const result = await octokit.request(\r\n      `GET /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        owner: \"bloodstrawberry\",\r\n        repo: `${repo}`,\r\n        path: `${path}`,\r\n        encoding: \"utf-8\",\r\n        decoding: \"utf-8\",\r\n      }\r\n    );\r\n\r\n    return result;\r\n  };\r\n\r\n  const githubUpload = async (imageDataUrls, currentTime) => {\r\n    if (imageDataUrls.length === 0) {\r\n      console.error(\"Please paste an image first.\");\r\n      return;\r\n    }\r\n\r\n    for (let index = 0; index < imageDataUrls.length; index++) {\r\n      const base64encoded = imageDataUrls[index];\r\n      const filePath = `images/image_${currentTime}_${index}.jpg`;\r\n      const apiURL = `https://api.github.com/repos/bloodstrawberry/auto-test/contents/${filePath}`;\r\n      const accessToken = process.env.REACT_APP_MY_TOKEN;\r\n\r\n      // fileWrite 후 3초 뒤에 실행하기 위해 앞으로 이동 (충돌 방지)\r\n      await new Promise((resolve) => setTimeout(resolve, 3000)); \r\n\r\n      try {        \r\n        const response = await axios.put(\r\n          apiURL,\r\n          {\r\n            message: `Add image ${index + 1}`,\r\n            content: base64encoded,\r\n            branch: \"main\",\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `token ${accessToken}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        console.log(\r\n          `Image ${index + 1} uploaded successfully:`,\r\n          response.data.content.name\r\n        );\r\n      } catch (error) {\r\n        console.error(`Error uploading image ${index + 1}:`, error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    let currentTime = getCurrentDateTime();\r\n    let markDownContent = editorRef.current.getInstance().getMarkdown();    \r\n    let {matches, imageDataArray} = extractDataUrlImages(markDownContent);    \r\n    \r\n    // base64 text를 링크로 변경\r\n    for(let index = 0; index < matches.length; index++) {\r\n      const filePath = `images/image_${currentTime}_${index}.jpg`;\r\n      markDownContent = markDownContent.replace(matches[index], `![image](https://github.com/bloodstrawberry/auto-test/raw/main/${filePath})`);\r\n    }\r\n\r\n    fileWrite(markDownContent);\r\n    \r\n    // 이미지 업로드\r\n    githubUpload(imageDataArray, currentTime);\r\n  };\r\n\r\n  const initReadMe = async () => {\r\n    // let item = localStorage.getItem(CONTENT_KEY);\r\n    let result = await fileRead();\r\n    let contents = decodeURIComponent(escape(window.atob(result.data.content)));\r\n    console.log(contents);\r\n\r\n    if (editMode === false) {\r\n      const viewer = new Viewer({\r\n        el: document.querySelector(\".toast-editor-viewer\"),\r\n        viewer: true,\r\n        height: \"600px\",\r\n        usageStatistics: false, // 통계 수집 거부\r\n        plugins: [tableMergedCell],\r\n      });\r\n\r\n      viewer.setMarkdown(contents);\r\n    }\r\n\r\n    if (editorRef.current)\r\n      editorRef.current.getInstance().setMarkdown(contents);\r\n  };\r\n\r\n  useEffect(() => {\r\n    initReadMe();\r\n  }, [editMode]);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <h1>Toast UI Editor</h1>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          sx={{ m: 1 }}\r\n          onClick={() => setEditMode(!editMode)}\r\n        >\r\n          {editMode ? \"취소하기\" : \"편집하기\"}\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ m: 1 }}\r\n          onClick={handleSave}\r\n          disabled={editMode === false}\r\n        >\r\n          저장하기\r\n        </Button>\r\n\r\n        {editMode === false && <div className=\"toast-editor-viewer\"></div>}\r\n\r\n        {editMode === true && (\r\n          <Editor\r\n            ref={editorRef}\r\n            // initialValue={initContents}\r\n            height=\"600px\"\r\n            placeholder=\"Please Enter Text.\"\r\n            previewStyle=\"tab\" // or vertical\r\n            initialEditType=\"wysiwyg\" // or markdown\r\n            // hideModeSwitch={true} // 하단 숨기기\r\n            toolbarItems={[\r\n              // 툴바 옵션 설정\r\n              [\"heading\", \"bold\", \"italic\", \"strike\"],\r\n              [\"hr\", \"quote\"],\r\n              [\"ul\", \"ol\", \"task\", \"indent\", \"outdent\"],\r\n              [\"table\", /* \"image\", */ \"link\"],\r\n              [\"code\", \"codeblock\"],\r\n            ]}\r\n            //theme=\"dark\"\r\n            //useCommandShortcut={false} // 키보드 입력 컨트롤 방지 ex ctrl z 등\r\n            usageStatistics={false} // 통계 수집 거부\r\n            plugins={[[colorSyntax, colorSyntaxOptions], tableMergedCell]}\r\n          />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst steps = [\"Step 0\", \"Step 1\", \"Step 2\", \"Step 3\"];\r\n\r\nconst MyStepper = () => {\r\n  const [activeStep, setActiveStep] = useState(-1);\r\n  const [failedStep, setFailedStep] = useState(-1);\r\n  \r\n  const isStepFailed = (step) => {\r\n    return step === failedStep;\r\n  };\r\n\r\n  const tempDelay = async (time, value) => {\r\n    await new Promise((resolve) => setTimeout(resolve, time));\r\n    return value;\r\n  };\r\n\r\n  const startProgress = async () => {\r\n    setActiveStep(0);\r\n    let step0 = await tempDelay(2000, true);\r\n    if(step0 === false) {    \r\n      setFailedStep(0);\r\n      return;\r\n    }\r\n\r\n    setActiveStep(1);\r\n    let step1 = await tempDelay(2000, true);\r\n    if(step1 === false) {    \r\n      setFailedStep(1);\r\n      return;\r\n    }\r\n\r\n    setActiveStep(2);\r\n    let step2 = await tempDelay(2000, false);\r\n    if(step2 === false) {\r\n      setFailedStep(2);\r\n      return;\r\n    }\r\n\r\n    setActiveStep(3);\r\n    let step3 = await tempDelay(2000, true);\r\n    if(step3 === false) {\r\n      setFailedStep(3);\r\n      return;\r\n    }\r\n\r\n    setActiveStep(4);   \r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"60%\", m: 3 }}>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        sx={{ m: 2 }}\r\n        onClick={startProgress}\r\n      >\r\n        START\r\n      </Button>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const labelProps = {};\r\n          if (isStepFailed(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant=\"caption\" color=\"error\">\r\n                Alert message\r\n              </Typography>\r\n            );\r\n\r\n            labelProps.error = true;\r\n          }\r\n\r\n          return (\r\n            <Step key={label}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyStepper;","import React, { useEffect, useState } from \"react\";\nimport { Route, Link, Routes } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport ButtonTest from \"./page/ButtonTest\";\nimport MaterialTable from \"./page/MaterialTable\";\nimport TreeViewExample from \"./page/TreeViewExample\";\nimport TreeViewExample2 from \"./page/TreeViewExample2\";\nimport FileBrowser from \"./page/FileBrowser\";\nimport MyAutoComplete from \"./page/MyAutoComplete\";\nimport LoadingBar from \"./page/LoadingBar\";\nimport ToastEditor from \"./page/ToastEditor\";\nimport MyHandsonTable from \"./page/MyHandsonTable\";\nimport MyTextEditorToggleButton from \"./page/MyTextEditorToggleButton\";\nimport ReactComments from \"./page/ReactComments\";\nimport GitHubLoginCallBack from \"./page/GitHubLoginCallback\";\n\nimport * as gh from \"./githublibrary.js\";\nimport * as ck from \"./cookielibrary.js\";\nimport ReactCookie from \"./page/ReactCookie.js\";\nimport IPConverter from \"./page/IPConverter.js\";\nimport ToastMailer from \"./page/ToastMailer.js\";\n\nimport ReactImageList from \"./page/ReactImageList.js\";\nimport Capture from \"./page/Capture.js\";\nimport SimpleToastEditor from \"./page/SimpleToastEditor.js\";\nimport MyStepper from \"./page/MyStepper.js\";\n\nconst useTitle = (initialTitle) => {\n  const [title, setTitle] = useState(initialTitle);\n  const updateTitle = () => {\n    const htmlTitle = document.querySelector(\"title\");\n    htmlTitle.innerText = title;\n  };\n  useEffect(updateTitle, [title]);\n  return setTitle;\n};\n\nconst App = () => {\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    if (loginStatus === false) return;\n    let loginID = ck.getCookies(\"LOGIN_ID\");\n    let url = ck.getCookies(\"AVATAR_URL\");\n    let profile = `https://github.com/${loginID}`;\n\n    setCurrentUser({\n      currentUserId: loginID,\n      currentUserImg: url,\n      currentUserProfile: profile,\n      currentUserFullName: loginID,\n    });\n  }, [loginStatus]);\n\n  const titleUpdator = useTitle(\"Loading...\");\n  setTimeout(() => titleUpdator(\"Home\"), 1000);\n\n  useEffect(() => {\n    gh.loginCheck(setLoginStatus);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* <img\n        src=\"https://github.com/bloodstrawberry/auto-test/raw/main/KakaoTalk_20230212_143204341_01.jpg\"\n        //https://github.com/bloodstrawberry/auto-test/blob/main/KakaoTalk_20230212_143204341_01.jpg 이지만 blob -> raw로 변경\n        //\"https://github.com/bloo/리포지토리/raw/브랜치명/이미지경로/이미지파일.jpg\"\n        alt=\"alt\"\n        title=\"title\"\n      /> */}\n      <div className=\"router\">\n        <span>\n          <Link to=\"/btn\">Button Test</Link>\n        </span>\n        <span>\n          <Link to=\"/mtable\">Material Table</Link>\n        </span>\n        <span>\n          <Link to=\"/tvexp\">Tree View</Link>\n        </span>\n        <span>\n          <Link to=\"/tvexp2\">Tree View 2</Link>\n        </span>\n        <span>\n          <Link to=\"/fileBrowser\">FileBrowser</Link>\n        </span>\n        <span>\n          <Link to=\"/autoComplete\">Auto Complete</Link>\n        </span>\n        <span>\n          <Link to=\"/loadingBar\">Loading</Link>\n        </span>\n        <span>\n          <Link to=\"/toastEditor\">Toast UI Editor</Link>\n        </span>\n        <span>\n          <Link to=\"/toggle\">Toggle Button</Link>\n        </span>\n        <span>\n          <Link to=\"/myHandsTable\">HandsOnTable</Link>\n        </span>\n        <span>\n          <Link to=\"/comments\">Comments</Link>\n        </span>\n        <span>\n          <Link to=\"/converter\">IP Converter</Link>\n        </span>\n        {/* <span>\n          <Link to=\"/mail\">Toast Mail</Link>\n        </span> */}\n        <span>\n          <Link to=\"/capture\">Capture</Link>\n        </span>\n        <span>\n          <Link to=\"/stepper\">Stepper</Link>\n        </span>\n        \n        \n        {/* <span>\n          <Link to=\"/imageList\">Image List</Link>\n        </span> */}\n\n        \n\n        {/* <span>\n          <Link to=\"/cookie\">Cookie</Link>\n        </span> */}\n      </div>\n      <div>\n        <Routes>\n          <Route path=\"/btn\" element={<ButtonTest />} />\n          <Route path=\"/mtable\" element={<MaterialTable />} />\n          <Route path=\"/tvexp\" element={<TreeViewExample />} />\n          <Route path=\"/tvexp2\" element={<TreeViewExample2 />} />\n          <Route path=\"/fileBrowser\" element={<FileBrowser />} />\n          <Route path=\"/autoComplete\" element={<MyAutoComplete />} />\n          <Route path=\"/loadingBar\" element={<LoadingBar />} />\n          <Route path=\"/toastEditor\" element={<ToastEditor />} />\n          <Route path=\"/toggle\" element={<MyTextEditorToggleButton />} />\n          <Route path=\"/myHandsTable\" element={<MyHandsonTable />} />\n          <Route path=\"/capture\" element={<Capture />} />\n          <Route path=\"/stepper\" element={<MyStepper />} />\n          \n{/*           \n          <Route path=\"/imageList\" element={<ReactImageList />} /> */}\n          \n          <Route\n            path=\"/comments\"\n            element={<ReactComments currentUser={currentUser} />}\n          />\n          <Route\n            path=\"/callback\"\n            element={\n              <GitHubLoginCallBack\n                loginStatus={loginStatus}\n                setLoginStatus={setLoginStatus}\n              />\n            }\n          />\n          <Route path=\"/cookie\" element={<ReactCookie />} />\n          <Route path=\"/converter\" element={<IPConverter />} />\n          \n          {/* <Route path=\"/mail\" element={<ToastMailer />} /> */}\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst InitScrollTop = () => {\r\n  const { pathname } = useLocation();\r\n  \r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default InitScrollTop;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport * as actions from \"./actions/loginAction\";\r\n\r\nconst LoginStatus = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let check = localStorage.getItem(\"LOGIN_INFO\");\r\n    if (check === null) return;\r\n\r\n    let loginInfo = JSON.parse(check);\r\n\r\n    console.log({ loginInfo });\r\n\r\n    dispatch(actions.login(loginInfo));\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default LoginStatus;\r\n","const loginStatus = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return { ...state, loginInfo: action.loginInfo, status: true };\r\n    case \"LOGOUT\":\r\n      return { ...state, loginInfo: \"\", status: undefined };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginStatus;\r\n","\r\nimport loginStatus from \"./loginReducers\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({ loginStatus });\r\n\r\nexport default rootReducer;","import { legacy_createStore as createStore } from \"redux\";\r\nimport rootReducer from \"../reducer/rootReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","//index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport InitScrollTop from \"./InitScrollTop\";\nimport LoginStatus from \"./LoginStatus\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}> \n      <LoginStatus />\n      <InitScrollTop />\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}