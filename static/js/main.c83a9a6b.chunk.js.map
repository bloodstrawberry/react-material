{"version":3,"sources":["page/ButtonTest.js","page/MaterialTable.js","page/TreeViewExample.js","page/TreeViewExample2.js","page/FileUI.js","page/FileBrowser.js","page/MyAutoComplete.js","page/LoadingBar.js","page/ToastEditor.js","page/CustomHansOnTable.js","page/MyHandsonTable.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonTest","React","createElement","Stack","direction","spacing","IconButton","aria-label","DeleteIcon","color","WcIcon","Button","sx","m","borderColor",":hover","variant","startIcon","data","name","firstName","lastName","address","city","state","MaterialTable","columns","accessorKey","header","size","Cell","_ref","renderedCellValue","row","_valuesCache","style","_ref2","_useState","useState","map","c","_useState2","_slicedToArray","setColumnOrder","MaterialReactTable","muiTableHeadCellProps","backgroundColor","BorderStyle","borderWidth","muiTablePaperProps","elevation","margin","width","border","muiTableBodyProps","& tr:nth-of-type(odd)","initialState","columnOrder","item","localStorage","getItem","JSON","parse","enablePinning","enableColumnOrdering","onColumnOrderChange","value","console","log","setItem","stringify","_toConsumableArray","MyTreeItem","withStyles","root","&.MuiTreeItem-root > .MuiTreeItem-content:hover","background","&.MuiTreeItem-root > .MuiTreeItem-content:hover > .MuiTreeItem-label","&.MuiTreeItem-root > .Mui-selected","@media (hover: none)","TreeItem","TreeViewExample","TreeView","defaultCollapseIcon","ExpandMoreIcon","defaultExpandIcon","ChevronRightIcon","disabledItemsFocusable","height","flexGrow","maxWidth","overflowY","nodeId","label","onClick","e","target","innerText","disabled","localData","child","TreeViewExample2","treeInfo","setTreeInfo","_React$useState","_React$useState2","expanded","setExpanded","_React$useState3","_React$useState4","selected","setSelected","useEffect","Box","mb","fullExpanded","i","push","toString","oldExpanded","length","oldSelected","onNodeToggle","event","nodeIds","onNodeSelect","makeTreeItem","info","parent","undefined","idx","key","concat","getFileName","path","spt","split","download","pathInfo","fileName","includes","axios","get","responseType","then","res","response","url","window","URL","createObjectURL","Blob","type","headers","link","document","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","downloadPC","catch","error","getFileBrowser","idMap","tvfunc","tmp","tmpPath","makeExpandedView","fetch","json","sortFileUI","findPath","FileUI","display","textAlign","cursor","verticalAlign","onDoubleClick","TextSnippetIcon","fontSize","FolderIcon","left","DataObjectICON","getMuiIcon","wordBreak","FileBrowser","_useState3","_useState4","fileUi","setFileUI","_useState5","_useState6","setIdMap","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","id","setId","_useState13","_useState14","setValue","_useState15","_useState16","dirList","setDirList","treeFocus","useRef","makeDirectories","directories","_step","tmpTreeInfo","tmpIdMap","_iterator","_createForOfIteratorHelper","_loop","d","len","current","_loop2","arr","findIndex","find","s","n","done","err","f","isFile","dir","filter","val","files","sort","getFilesForFileBrowser","substring","setTimeout","parseInt","focus","clickTime","Date","defaultProps","options","getOptionLabel","option","marginLeft","paddingBottom","Autocomplete","Object","assign","autoComplete","includeInputInList","onChange","newValue","renderInput","params","TextField","gridTemplateColumns","gridGap","ids","className","diff","getTime","overflowX","ref","borderRight","top100Films","title","year","MyAutoComplete","multipleValue","setMultipleValue","top100Films10Year","year10","_objectSpread","a","b","groupBy","filterOptions","list","input","inputValue","myFilter","multiple","filterSelectedOptions","placeholder","util","require","str","inspect","LoadingBar","open","setOpen","Promise","resolve","reject","Modal","aria-labelledby","aria-describedby","position","top","transform","bgcolor","justifyContent","alignItems","CircularProgress","colorSyntaxOptions","preset","ToastEditor","editorRef","editMode","setEditMode","initData","viewer","Viewer","el","querySelector","usageStatistics","plugins","tableMergedCell","setMarkdown","getInstance","markDownContent","getMarkdown","Editor","previewStyle","initialEditType","toolbarItems","colorSyntax","redRenderer","instance","td","Handsontable","renderers","TextRenderer","apply","this","arguments","String","fromCharCode","charCodeAt","table","k","number","padStart","colHeaders","rowHeaders","wordWrap","manualColumnResize","manualRowResize","manualColumnMove","manualRowMove","manualColumnFreeze","contextMenu","persistentState","observeChanges","afterChangesObserved","col","result","afterChange","change","source","stretchH","selectionMode","startRows","startCols","minSpareRows","minSpareCols","fixedColumnsLeft","fixedRowsBottom","fixedColumnsStart","colWidths","rowHeights","search","callback","testResult","getCellMeta","isSearchResult","searchResultCount","cells","prop","cellProperties","readOnly","renderer","licenseKey","CustomHansOnTable","customOptions","container","getElementById","innerHTML","myTable","render","selectAll","makeTable","MyHandsonTable","App","titleUpdator","initialTitle","setTitle","useTitle","Link","to","Routes","Route","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","BrowserRouter","basename","process"],"mappings":"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","file":"static/js/main.c83a9a6b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport WcIcon from \"@mui/icons-material/Wc\";\r\n\r\nconst ButtonTest = () => {\r\n  return (\r\n    <div>\r\n      <Stack direction=\"row\" spacing={1}>\r\n        <IconButton aria-label=\"delete\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"delete\" color=\"primary\">\r\n          <WcIcon>화장실</WcIcon>\r\n        </IconButton>\r\n        <Button\r\n          sx={{\r\n            m: 1,\r\n            color: \"red\",\r\n            borderColor: \"pink\",\r\n            \":hover\": { borderColor: \"red\" },\r\n          }}\r\n          variant=\"outlined\"\r\n          startIcon={<WcIcon />}\r\n        >\r\n          화장실\r\n        </Button>\r\n      </Stack>\r\n      <Button\r\n        sx={{\r\n          m: 1,\r\n          color: \"black\",\r\n          borderColor: \"gray\",\r\n          \":hover\": { borderColor: \"black\" },\r\n        }}\r\n        variant=\"outlined\"\r\n      >\r\n        Custom Button\r\n      </Button>\r\n      <Button\r\n        sx={{\r\n          m: 1,\r\n          color: \"black\",\r\n          borderColor: \"gray\",\r\n          \":hover\": { borderColor: \"black\" },\r\n        }}\r\n        variant=\"outlined\"\r\n        //startIcon={<MapIcon/>}\r\n      >\r\n        Custom Button\r\n      </Button>\r\n      <Stack sx={{ m: 1 }} spacing={2} direction=\"row\">\r\n        <Button variant=\"text\" color=\"primary\">\r\n          Primary\r\n        </Button>\r\n        <Button variant=\"text\" color=\"secondary\">\r\n          Secondary\r\n        </Button>\r\n        <Button variant=\"text\" color=\"error\">\r\n          Error\r\n        </Button>\r\n        <Button variant=\"text\" color=\"warning\">\r\n          Warning\r\n        </Button>\r\n        <Button variant=\"text\" color=\"info\">\r\n          Info\r\n        </Button>\r\n        <Button variant=\"text\" color=\"success\">\r\n          Success\r\n        </Button>\r\n      </Stack>\r\n      <Stack sx={{ m: 1 }} spacing={2} direction=\"row\">\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Primary\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          Secondary\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"error\">\r\n          Error\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"warning\">\r\n          Warning\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"info\">\r\n          Info\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"success\">\r\n          Success\r\n        </Button>\r\n      </Stack>\r\n      <Stack sx={{ m: 1 }} spacing={2} direction=\"row\">\r\n        <Button variant=\"outlined\" color=\"primary\">\r\n          Primary\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"secondary\">\r\n          Secondary\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"error\">\r\n          Error\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"warning\">\r\n          Warning\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"info\">\r\n          Info\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"success\">\r\n          Success\r\n        </Button>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonTest;\r\n","import React, { useState } from \"react\";\r\nimport MaterialReactTable from \"material-react-table\";\r\n\r\n//nested data is ok, see accessorKeys in ColumnDef below\r\nconst data = [\r\n  {\r\n    name: {\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n    },\r\n    address: \"261 Erdman Ford\",\r\n    city: \"East Daphne\",\r\n    state: \"Kentucky\",\r\n  },\r\n  {\r\n    name: {\r\n      firstName: \"Jane\",\r\n      lastName: \"Doe\",\r\n    },\r\n    address: \"769 Dominic Grove\",\r\n    city: \"Columbus\",\r\n    state: \"Ohio\",\r\n  },\r\n  {\r\n    name: {\r\n      firstName: \"Joe\",\r\n      lastName: \"Doe\",\r\n    },\r\n    address: \"566 Brakus Inlet\",\r\n    city: \"South Linda\",\r\n    state: \"West Virginia\",\r\n  },\r\n  {\r\n    name: {\r\n      firstName: \"Kevin\",\r\n      lastName: \"Vandy\",\r\n    },\r\n    address: \"722 Emie Stream\",\r\n    city: \"Lincoln\",\r\n    state: \"Nebraska\",\r\n  },\r\n  {\r\n    name: {\r\n      firstName: \"Joshua\",\r\n      lastName: \"Rolluffs\",\r\n    },\r\n    address: \"32188 Larkin Turnpike\",\r\n    city: \"Charleston\",\r\n    state: \"South Carolina\",\r\n  },\r\n];\r\n\r\nconst MaterialTable = () => {\r\n  const makeBlue = (city, name) => {\r\n    if (name === \"Doe\") return <span style={{ color: \"blue\" }}>{city}</span>;\r\n    return city;\r\n  };\r\n\r\n  let columns = [\r\n    {\r\n      accessorKey: \"name.firstName\", //access nested data with dot notation\r\n      header: \"First Name\",\r\n      size: 10,\r\n    },\r\n    {\r\n      accessorKey: \"name.lastName\",\r\n      header: \"Last Name\",\r\n      size: 10,\r\n    },\r\n    {\r\n      accessorKey: \"address\", //normal accessorKey\r\n      header: \"Address\",\r\n    },\r\n    {\r\n      accessorKey: \"city\",\r\n      header: \"City\",\r\n      Cell: ({ renderedCellValue, row }) =>\r\n        makeBlue(renderedCellValue, row._valuesCache[\"name.lastName\"]),\r\n    },\r\n    {\r\n      accessorKey: \"state\",\r\n      header: \"State\",\r\n      Cell: ({ renderedCellValue }) => {\r\n        return <span style={{ color: \"red\" }}>{renderedCellValue}</span>;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [columnOrder, setColumnOrder] = useState(\r\n    columns.map((c) => c.accessorKey)\r\n  );\r\n\r\n  const ACCESSOR_KEY = \"ACCESSOR_KEY\";\r\n\r\n  const initOrdering = () => {\r\n    let item = localStorage.getItem(ACCESSOR_KEY);\r\n\r\n    if (item === null) return columns.map((c) => c.accessorKey);\r\n\r\n    let ordering = JSON.parse(item);\r\n    return ordering;\r\n  };\r\n\r\n  const handleColumnOrderChange = (value) => {\r\n    setColumnOrder(value);\r\n\r\n    console.log(value);\r\n\r\n    localStorage.setItem(ACCESSOR_KEY, JSON.stringify([...value]));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialReactTable\r\n        muiTableHeadCellProps={{\r\n          sx: {\r\n            backgroundColor: \"yellow\",\r\n            BorderStyle: \"solid\",\r\n            borderWidth: \"1px 0px 1px 0px\",\r\n            borderColor: \"black black black black\",\r\n          },\r\n        }}\r\n        muiTablePaperProps={{\r\n          elevation: 10, // shadow effect\r\n          sx: {\r\n            margin: \"0 auto\",\r\n            width: \"80%\",\r\n            border: \"1px solid black\",\r\n          },\r\n        }}\r\n        muiTableBodyProps={{\r\n          sx: {\r\n            \"& tr:nth-of-type(odd)\": {\r\n              backgroundColor: \"skyblue\",\r\n            },\r\n          },\r\n        }}\r\n        columns={columns}\r\n        initialState={{\r\n          columnOrder: initOrdering,\r\n        }}\r\n        data={data}\r\n        enablePinning\r\n        enableColumnOrdering\r\n        onColumnOrderChange={handleColumnOrderChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialTable;\r\n","import React from \"react\";\r\n\r\nimport TreeView from \"@mui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\n\r\nimport TreeItem from \"@mui/lab/TreeItem\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nconst MyTreeItem = withStyles({\r\n  root: {\r\n    \"&.MuiTreeItem-root > .MuiTreeItem-content:hover\": {\r\n      background: \"red\",\r\n    },\r\n    \"&.MuiTreeItem-root > .MuiTreeItem-content:hover > .MuiTreeItem-label\": {\r\n      background: \"pink\",\r\n    },\r\n    \"&.MuiTreeItem-root > .Mui-selected\": {\r\n      background: \"grey\",\r\n    },\r\n    \"@media (hover: none)\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n})(TreeItem);\r\n\r\nconst TreeViewExample = () => {\r\n  return (\r\n    <div>\r\n      \r\n      <TreeView\r\n        aria-label=\"file system navigator\"\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        disabledItemsFocusable={true}\r\n        sx={{ height: 240, flexGrow: 1, maxWidth: 400, overflowY: \"auto\" }}\r\n      >\r\n        <MyTreeItem\r\n          nodeId=\"1\"\r\n          label=\"Applications\"\r\n          onClick={(e) => console.log(e.target.innerText)}\r\n        >\r\n          <MyTreeItem nodeId=\"2\" label=\"Calendar\" />\r\n        </MyTreeItem>\r\n        <MyTreeItem nodeId=\"5\" label=\"Documents\">\r\n          <MyTreeItem nodeId=\"10\" label=\"OSS\" />\r\n          <MyTreeItem nodeId=\"6\" label=\"MUI\" disabled={true}>\r\n            <MyTreeItem nodeId=\"8\" label=\"index.js\" />\r\n          </MyTreeItem>\r\n        </MyTreeItem>\r\n      </TreeView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeViewExample;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport TreeView from \"@mui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport TreeItem from \"@mui/lab/TreeItem\";\r\n\r\nlet localData = {\r\n  child: [\r\n    {\r\n      label: \"D:\",\r\n      nodeId: 0,\r\n      child: [\r\n        {\r\n          label: \"github\",\r\n          nodeId: 1,\r\n          child: [\r\n            {\r\n              label: \"globfiles\",\r\n              nodeId: 2,\r\n              child: [\r\n                {\r\n                  label: \"abc1\",\r\n                  nodeId: 3,\r\n                  child: [\r\n                    { label: \"abc1_jsonfile1.json\", nodeId: 4 },\r\n                    { label: \"abc1_jsonfile2.json\", nodeId: 5 },\r\n                    { label: \"abc1_textfile1.txt\", nodeId: 6 },\r\n                    { label: \"abc1_textfile2.txt\", nodeId: 7 },\r\n                    {\r\n                      label: \"abc2\",\r\n                      nodeId: 8,\r\n                      child: [\r\n                        { label: \"abc2_jsonfile.json\", nodeId: 12 },\r\n                        {\r\n                          label: \"abc3\",\r\n                          nodeId: 13,\r\n                          child: [\r\n                            { label: \"abc3_jsonfile.json\", nodeId: 14 },\r\n                            { label: \"abc3_textfile.txt\", nodeId: 15 },\r\n                          ],\r\n                        },\r\n                      ],\r\n                    },\r\n                    {\r\n                      label: \"abc2_2\",\r\n                      nodeId: 9,\r\n                      child: [\r\n                        { label: \"abc2_2_jsonfile.json\", nodeId: 10 },\r\n                        { label: \"abc2_2_textfile.txt\", nodeId: 11 },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  label: \"def1\",\r\n                  nodeId: 16,\r\n                  child: [\r\n                    { label: \"def_jsonfile1.json\", nodeId: 17 },\r\n                    { label: \"def_jsonfile2.json\", nodeId: 18 },\r\n                    { label: \"def_textfile1.txt\", nodeId: 19 },\r\n                    { label: \"def_textfile2.txt\", nodeId: 20 },\r\n                  ],\r\n                },\r\n                {\r\n                  label: \"ghi1\",\r\n                  nodeId: 21,\r\n                  child: [\r\n                    {\r\n                      label: \"ghi2\",\r\n                      nodeId: 22,\r\n                      child: [\r\n                        { label: \"ghi2_jsonfile1.json\", nodeId: 23 },\r\n                        { label: \"ghi2_jsonfile2.json\", nodeId: 24 },\r\n                        { label: \"ghi2_textfile1.txt\", nodeId: 25 },\r\n                        { label: \"ghi2_textfile2.txt\", nodeId: 26 },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n                { label: \"jsonfile1.json\", nodeId: 27 },\r\n                { label: \"jsonfile2.json\", nodeId: 28 },\r\n                { label: \"textfile1.txt\", nodeId: 29 },\r\n                { label: \"textfile2.txt\", nodeId: 30 },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst TreeViewExample2 = () => {\r\n  const [treeInfo, setTreeInfo] = useState({});\r\n\r\n  const [expanded, setExpanded] = React.useState([]);\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  /*\r\n  let tmpTreeInfo = {};\r\n  let nodeId = 0;\r\n  const appendChild = (arr, info) => {\r\n    if (arr.child === undefined) arr.child = [];\r\n    if (arr.child.findIndex((item) => item.label === info) === -1) {\r\n      arr.child.push({ label: info, nodeId });\r\n      nodeId++;\r\n    }\r\n  };\r\n\r\n  const makeDirectories = (directories) => {\r\n    tmpTreeInfo = {};\r\n    for (let d of directories) {\r\n      let split = d.split(\"/\");\r\n      let len = split.length;\r\n      let current = tmpTreeInfo;\r\n\r\n      for (let i = 0; i < len; i++) {\r\n        appendChild(current, split[i]);\r\n        current = current.child.find((item) => item.label === split[i]);\r\n      }\r\n    }\r\n\r\n    console.log(tmpTreeInfo);\r\n    setTreeInfo(tmpTreeInfo);\r\n  };\r\n  */\r\n\r\n  const getFiles = () => {\r\n    setTreeInfo(localData);\r\n    return;\r\n    // let server = `http://192.168.55.120:3002`;\r\n    // let path = `D:\\\\github\\\\globfiles\\\\**`;\r\n    // fetch(`${server}/useGlob?path=${path}`)\r\n    //   .then((res) => res.json())\r\n    //   .then((data) => makeDirectories(data.findPath));\r\n  };\r\n\r\n  const makeTreeItem = (info, parent) => {\r\n    if (info.child === undefined) return;\r\n\r\n    return info.child.map((item, idx) => (\r\n      <TreeItem\r\n        key={idx}\r\n        nodeId={item.nodeId.toString()}\r\n        label={item.label}\r\n        onClick={() => console.log(`${parent}/${item.label}`)}\r\n      >\r\n        {makeTreeItem(item, `${parent}/${item.label}`)}\r\n      </TreeItem>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  const handleToggle = (event, nodeIds) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const handleSelect = (event, nodeIds) => {\r\n    setSelected(nodeIds);\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    let fullExpanded = [];\r\n    for (let i = 0; i <= 30; i++) fullExpanded.push(i.toString());\r\n\r\n    setExpanded((oldExpanded) =>\r\n      oldExpanded.length === 0 ? fullExpanded : []\r\n    );\r\n  };\r\n\r\n  const handleSelectClick = () => {\r\n    setSelected((oldSelected) =>\r\n      oldSelected.length === 0\r\n        ? [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r\n        : []\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ mb: 1 }}>\r\n        <Button onClick={handleExpandClick}>\r\n          {expanded.length === 0 ? \"Expand all\" : \"Collapse all\"}\r\n        </Button>\r\n        <Button onClick={handleSelectClick}>\r\n          {selected.length === 0 ? \"Select all\" : \"Unselect all\"}\r\n        </Button>\r\n      </Box>\r\n      <TreeView\r\n        expanded={expanded}\r\n        selected={selected}\r\n        onNodeToggle={handleToggle}\r\n        onNodeSelect={handleSelect}\r\n        aria-label=\"file system navigator\"\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        //sx={{ height: 240, flexGrow: 1, maxWidth: 400, overflowY: \"auto\" }}\r\n      >\r\n        {makeTreeItem(treeInfo, \"\")}\r\n      </TreeView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeViewExample2;\r\n","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport TextSnippetIcon from \"@mui/icons-material/TextSnippet\";\r\nimport DataObjectICON from \"@mui/icons-material/DataObject\";\r\nimport FolderIcon from \"@mui/icons-material/Folder\";\r\n\r\nconst getFileName = (path) => {\r\n  if (path === undefined) return undefined;\r\n  let spt = path.split(\"/\");\r\n  return spt[spt.length - 1];\r\n};\r\n\r\nconst getMuiIcon = (fileName) => {\r\n  if (fileName === undefined) return <TextSnippetIcon sx={{ fontSize: 60 }} />;\r\n\r\n  let spt = fileName.split(\".\");\r\n  if (spt.length === 1)\r\n    return <FolderIcon sx={{ fontSize: 60, left: \"50%\" }} />;\r\n  if (spt[1] === \"json\")\r\n    return <DataObjectICON sx={{ fontSize: 60, left: \"50%\" }} />;\r\n  return <TextSnippetIcon sx={{ fontSize: 60, left: \"50%\" }} />;\r\n};\r\n\r\nconst downloadPC = (response, fileName) => {\r\n  const url = window.URL.createObjectURL(\r\n    new Blob([response.data], { type: `${response.headers[\"content-type\"]}` })\r\n  );\r\n\r\n  let link = document.createElement(\"a\");\r\n  link.href = url;\r\n  link.setAttribute(\"download\", fileName);\r\n\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n\r\n  window.URL.revokeObjectURL(url); // memory 해제\r\n};\r\n\r\nconst makeExpandedView = (pathInfo, idMap, tvfunc) => {\r\n  let tmp = [...tvfunc.expanded];\r\n  let spt = pathInfo.split(\"/\");\r\n  let tmpPath = \"D:\";\r\n  for(let i = 1; i < spt.length; i++) {\r\n    tmpPath += `/${spt[i]}`;\r\n\r\n    console.log(tmpPath);\r\n    if(idMap[tmpPath] === undefined) continue;\r\n    if(tmp.includes(idMap[tmpPath])) continue;\r\n\r\n    tmp.push(idMap[tmpPath]);\r\n  }\r\n\r\n  tvfunc.setExpanded([...tmp]);\r\n} \r\n\r\nconst download = (pathInfo) => {\r\n  if (pathInfo === undefined || pathInfo === \"\") return;\r\n\r\n  let fileName = getFileName(pathInfo);\r\n\r\n  if (fileName.includes(\".\") === false) return; // 폴더인 경우\r\n\r\n  let server = `http://192.168.55.120:3002`;\r\n  axios\r\n    .get(`${server}/downloadFile?filePath=${pathInfo}`, {\r\n      responseType: \"arraybuffer\",\r\n    })\r\n    .then((res) => {\r\n      downloadPC(res, fileName);\r\n    })\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getFileBrowser = (pathInfo, idMap, tvfunc) => {\r\n  if (pathInfo === undefined || pathInfo === \"\") return;\r\n\r\n  let fileName = getFileName(pathInfo);\r\n\r\n  if (fileName.includes(\".\")) return;\r\n\r\n  makeExpandedView(pathInfo, idMap, tvfunc);\r\n  tvfunc.setSelected(idMap[pathInfo]);\r\n\r\n  let server = `http://192.168.55.120:3002`;\r\n  let path = pathInfo + \"/*\";\r\n\r\n  fetch(`${server}/useGlob?path=${path}`)\r\n    .then((res) => res.json())\r\n    .then((data) => tvfunc.sortFileUI(data.findPath));\r\n}\r\n\r\nconst FileUI = ({ pathInfo, idMap, tvfunc }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"inline-block\",\r\n        width: \"110px\",\r\n        height: \"120px\",\r\n        backgroundColor: \"silver\",\r\n        textAlign: \"center\",\r\n        margin: \"10px\",\r\n        cursor: \"pointer\",\r\n        verticalAlign: \"top\",\r\n      }}\r\n      onClick={() => download(pathInfo)}\r\n      onDoubleClick={() => getFileBrowser(pathInfo, idMap, tvfunc)}\r\n    >\r\n      {getMuiIcon(getFileName(pathInfo))}\r\n      <div style={{ width: \"110px\", height: \"40px\", wordBreak: \"break-all\" }}>\r\n        <span\r\n          style={{\r\n            fontSize: \"12px\",\r\n            backgroundColor: \"green\",\r\n            cursor: \"pointer\",\r\n            display: \"block\",\r\n            height: \"50px\",\r\n          }}\r\n        >\r\n          {getFileName(pathInfo)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUI;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport TreeView from \"@mui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport FileUI from \"./FileUI\";\r\n\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\n\r\nimport MyTreeItem from \"@mui/lab/TreeItem\";\r\nimport { withStyles } from \"@mui/styles\";\r\n\r\nconst TreeItem = withStyles({\r\n  root: {\r\n    \"&.MuiTreeItem-root > .MuiTreeItem-content:hover\": {\r\n      background: \"red\",\r\n    },\r\n    \"&.MuiTreeItem-root > .MuiTreeItem-content:hover > .MuiTreeItem-label\": {\r\n      background: \"pink\",\r\n    },\r\n    \"&.MuiTreeItem-root > .Mui-selected\": {\r\n      background: \"grey\",\r\n    },\r\n    \"@media (hover: none)\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n})(MyTreeItem);\r\n\r\nconst FileBrowser = () => {\r\n  const [treeInfo, setTreeInfo] = useState({});\r\n  const [fileUi, setFileUI] = useState([]);\r\n\r\n  const [idMap, setIdMap] = useState({});\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [id, setId] = useState(0);\r\n\r\n  const [value, setValue] = useState(null);\r\n  const [dirList, setDirList] = useState([]);\r\n\r\n  const treeFocus = useRef([]);\r\n\r\n  let nodeId = 0;\r\n  const appendChild = (arr, info, path, tmpIdMap) => {\r\n    if (arr.child === undefined) arr.child = [];\r\n    if (arr.child.findIndex((item) => item.label === info) === -1) {\r\n      arr.child.push({ label: info, nodeId });\r\n      tmpIdMap[path] = nodeId.toString();\r\n      nodeId++;\r\n    }\r\n  };\r\n\r\n  const makeDirectories = (directories) => {\r\n    let tmpTreeInfo = {};\r\n    let tmpIdMap = {};\r\n\r\n    let dir = [\"D:\", \"D:/github\", ...directories];\r\n\r\n    for (let d of dir) {\r\n      let split = d.split(\"/\");\r\n      let len = split.length;\r\n      let current = tmpTreeInfo;\r\n\r\n      for (let i = 0; i < len; i++) {\r\n        appendChild(current, split[i], d, tmpIdMap);\r\n        current = current.child.find((item) => item.label === split[i]);\r\n      }\r\n    }\r\n\r\n    setDirList(directories);\r\n    setIdMap(tmpIdMap);\r\n    setTreeInfo(tmpTreeInfo);\r\n    setId(nodeId);\r\n  };\r\n\r\n  const getFiles = () => {\r\n    // setTreeInfo(localData);\r\n    // return;\r\n    let server = `http://192.168.55.120:3002`;\r\n    let path = `D:\\\\github\\\\globfiles\\\\**`;\r\n\r\n    fetch(`${server}/useGlob?path=${path}`)\r\n      .then((res) => res.json())\r\n      .then((data) => makeDirectories(data.findPath));\r\n  };\r\n\r\n  const isFile = (path) => {\r\n    let spt = path.split(\"/\");\r\n    return spt[spt.length - 1].includes(\".\");\r\n  };\r\n\r\n  const sortFileUI = (path) => {\r\n    let dir = path.filter((val) => isFile(val) === false);\r\n    let files = path.filter((val) => isFile(val));\r\n\r\n    dir.sort();\r\n    files.sort();\r\n\r\n    setFileUI([...dir, ...files]);\r\n  };\r\n\r\n  const getFilesForFileBrowser = (path) => {\r\n    let server = `http://192.168.55.120:3002`;\r\n\r\n    /* /D:/... 앞의 / 삭제 */\r\n    path = path.substring(1, path.length);\r\n\r\n    setValue(path);\r\n\r\n    fetch(`${server}/useGlob?path=${path}/*`)\r\n      .then((res) => res.json())\r\n      .then((data) => sortFileUI(data.findPath));\r\n  };\r\n\r\n  const makeTreeItem = (info, parent) => {\r\n    if (info.child === undefined) return;\r\n    return info.child.map((item, idx) => (\r\n      <TreeItem\r\n        key={idx}\r\n        nodeId={item.nodeId.toString()}\r\n        ref={(val) => (treeFocus.current[item.nodeId] = val)}\r\n        label={item.label}\r\n        onClick={() => getFilesForFileBrowser(`${parent}/${item.label}`)}\r\n      >\r\n        {makeTreeItem(item, `${parent}/${item.label}`)}\r\n      </TreeItem>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selected.length === 0) return;\r\n    setTimeout(() => {\r\n      treeFocus.current[parseInt(idMap[value])].focus();\r\n    }, 250);\r\n  }, [selected]);\r\n\r\n  let clickTime = new Date();\r\n  const handleToggle = (event, ids) => {\r\n    let current = new Date();\r\n    if (event.target.className === \"MuiTreeItem-label\") {\r\n      let diff = current.getTime() - clickTime.getTime();\r\n      clickTime = new Date();\r\n      if (diff > 250) return;\r\n    }\r\n    clickTime = new Date();\r\n    setExpanded(ids);\r\n  };\r\n\r\n  const handleSelect = (event, ids) => {\r\n    setSelected(ids);\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    let fullExpanded = [];\r\n    for (let i = 0; i <= id; i++) fullExpanded.push(i.toString());\r\n\r\n    setExpanded((oldExpanded) =>\r\n      oldExpanded.length === 0 ? fullExpanded : []\r\n    );\r\n  };\r\n\r\n  const makeExpandedView = (pathInfo) => {\r\n    let tmp = [\"0\", \"1\", ...expanded];\r\n    let spt = pathInfo.split(\"/\");\r\n    let tmpPath = \"D:\";\r\n    for (let i = 1; i < spt.length; i++) {\r\n      tmpPath += `/${spt[i]}`;\r\n\r\n      if (idMap[tmpPath] === undefined) continue;\r\n      if (tmp.includes(idMap[tmpPath])) continue;\r\n\r\n      tmp.push(idMap[tmpPath]);\r\n    }\r\n\r\n    setSelected(idMap[pathInfo]);\r\n    setExpanded([...tmp]);\r\n  };\r\n\r\n  const defaultProps = {\r\n    options: dirList,\r\n    getOptionLabel: (option) => option,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Stack spacing={1} sx={{ width: \"80%\", marginLeft: 5, paddingBottom: 3 }}>\r\n        <Autocomplete\r\n          {...defaultProps}\r\n          id=\"auto-complete\"\r\n          autoComplete\r\n          includeInputInList\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n            getFilesForFileBrowser(`/${newValue}`);\r\n            makeExpandedView(newValue);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Search Files\" variant=\"standard\" />\r\n          )}\r\n        />\r\n      </Stack>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"25% 1% auto\",\r\n          gridGap: \"25px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {/* <button onClick={getFiles}>test</button> */}\r\n        <div>\r\n          {/* <a\r\n            href=\"https://bloodstrawberry.tistory.com/1175\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Node Server 구현 필요\r\n          </a> */}\r\n          <Box sx={{ mb: 1 }}>\r\n            <Button onClick={handleExpandClick}>\r\n              {expanded.length === 0 ? \"Expand all\" : \"Collapse all\"}\r\n            </Button>\r\n          </Box>\r\n          <TreeView\r\n            expanded={expanded}\r\n            onNodeToggle={handleToggle}\r\n            selected={selected}\r\n            onNodeSelect={handleSelect}\r\n            aria-label=\"file system navigator\"\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            sx={{ height: 500, overflowX: \"hidden\" }}\r\n            //sx={{ height: 240, flexGrow: 1, maxWidth: 400, overflowY: \"auto\" }}\r\n          >\r\n            {makeTreeItem(treeInfo, \"\")}\r\n          </TreeView>\r\n        </div>\r\n        <div style={{ borderRight: \"2px solid black\" }} />\r\n        <div>\r\n          {fileUi.map((f, idx) => (\r\n            <FileUI\r\n              key={idx}\r\n              pathInfo={f}\r\n              idMap={idMap}\r\n              tvfunc={{ expanded, setExpanded, setSelected, sortFileUI }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileBrowser;\r\n","import React, { useState } from \"react\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: \"Pulp Fiction\", year: 1994 },\r\n  {\r\n    title: \"The Lord of the Rings: The Return of the King\",\r\n    year: 2003,\r\n  },\r\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\r\n  { title: \"Fight Club\", year: 1999 },\r\n  {\r\n    title: \"The Lord of the Rings: The Fellowship of the Ring\",\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: \"Star Wars: Episode V - The Empire Strikes Back\",\r\n    year: 1980,\r\n  },\r\n  { title: \"Forrest Gump\", year: 1994 },\r\n  { title: \"Inception\", year: 2010 },\r\n  {\r\n    title: \"The Lord of the Rings: The Two Towers\",\r\n    year: 2002,\r\n  },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: \"Goodfellas\", year: 1990 },\r\n  { title: \"The Matrix\", year: 1999 },\r\n  { title: \"Seven Samurai\", year: 1954 },\r\n  {\r\n    title: \"Star Wars: Episode IV - A New Hope\",\r\n    year: 1977,\r\n  },\r\n  { title: \"City of God\", year: 2002 },\r\n  { title: \"Se7en\", year: 1995 },\r\n  { title: \"The Silence of the Lambs\", year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: \"Life Is Beautiful\", year: 1997 },\r\n  { title: \"The Usual Suspects\", year: 1995 },\r\n  { title: \"Léon: The Professional\", year: 1994 },\r\n  { title: \"Spirited Away\", year: 2001 },\r\n  { title: \"Saving Private Ryan\", year: 1998 },\r\n  { title: \"Once Upon a Time in the West\", year: 1968 },\r\n  { title: \"American History X\", year: 1998 },\r\n  { title: \"Interstellar\", year: 2014 },\r\n  { title: \"Casablanca\", year: 1942 },\r\n  { title: \"City Lights\", year: 1931 },\r\n  { title: \"Psycho\", year: 1960 },\r\n  { title: \"The Green Mile\", year: 1999 },\r\n  { title: \"The Intouchables\", year: 2011 },\r\n  { title: \"Modern Times\", year: 1936 },\r\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\r\n  { title: \"Rear Window\", year: 1954 },\r\n  { title: \"The Pianist\", year: 2002 },\r\n  { title: \"The Departed\", year: 2006 },\r\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\r\n  { title: \"Back to the Future\", year: 1985 },\r\n  { title: \"Whiplash\", year: 2014 },\r\n  { title: \"Gladiator\", year: 2000 },\r\n  { title: \"Memento\", year: 2000 },\r\n  { title: \"The Prestige\", year: 2006 },\r\n  { title: \"The Lion King\", year: 1994 },\r\n  { title: \"Apocalypse Now\", year: 1979 },\r\n  { title: \"Alien\", year: 1979 },\r\n  { title: \"Sunset Boulevard\", year: 1950 },\r\n  {\r\n    title:\r\n      \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\r\n    year: 1964,\r\n  },\r\n  { title: \"The Great Dictator\", year: 1940 },\r\n  { title: \"Cinema Paradiso\", year: 1988 },\r\n  { title: \"The Lives of Others\", year: 2006 },\r\n  { title: \"Grave of the Fireflies\", year: 1988 },\r\n  { title: \"Paths of Glory\", year: 1957 },\r\n  { title: \"Django Unchained\", year: 2012 },\r\n  { title: \"The Shining\", year: 1980 },\r\n  { title: \"WALL·E\", year: 2008 },\r\n  { title: \"American Beauty\", year: 1999 },\r\n  { title: \"The Dark Knight Rises\", year: 2012 },\r\n  { title: \"Princess Mononoke\", year: 1997 },\r\n  { title: \"Aliens\", year: 1986 },\r\n  { title: \"Oldboy\", year: 2003 },\r\n  { title: \"Once Upon a Time in America\", year: 1984 },\r\n  { title: \"Witness for the Prosecution\", year: 1957 },\r\n  { title: \"Das Boot\", year: 1981 },\r\n  { title: \"Citizen Kane\", year: 1941 },\r\n  { title: \"North by Northwest\", year: 1959 },\r\n  { title: \"Vertigo\", year: 1958 },\r\n  {\r\n    title: \"Star Wars: Episode VI - Return of the Jedi\",\r\n    year: 1983,\r\n  },\r\n  { title: \"Reservoir Dogs\", year: 1992 },\r\n  { title: \"Braveheart\", year: 1995 },\r\n  { title: \"M\", year: 1931 },\r\n  { title: \"Requiem for a Dream\", year: 2000 },\r\n  { title: \"Amélie\", year: 2001 },\r\n  { title: \"A Clockwork Orange\", year: 1971 },\r\n  { title: \"Like Stars on Earth\", year: 2007 },\r\n  { title: \"Taxi Driver\", year: 1976 },\r\n  { title: \"Lawrence of Arabia\", year: 1962 },\r\n  { title: \"Double Indemnity\", year: 1944 },\r\n  {\r\n    title: \"Eternal Sunshine of the Spotless Mind\",\r\n    year: 2004,\r\n  },\r\n  { title: \"Amadeus\", year: 1984 },\r\n  { title: \"To Kill a Mockingbird\", year: 1962 },\r\n  { title: \"Toy Story 3\", year: 2010 },\r\n  { title: \"Logan\", year: 2017 },\r\n  { title: \"Full Metal Jacket\", year: 1987 },\r\n  { title: \"Dangal\", year: 2016 },\r\n  { title: \"The Sting\", year: 1973 },\r\n  { title: \"2001: A Space Odyssey\", year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: \"Toy Story\", year: 1995 },\r\n  { title: \"Bicycle Thieves\", year: 1948 },\r\n  { title: \"The Kid\", year: 1921 },\r\n  { title: \"Inglourious Basterds\", year: 2009 },\r\n  { title: \"Snatch\", year: 2000 },\r\n  { title: \"3 Idiots\", year: 2009 },\r\n  { title: \"Monty Python and the Holy Grail\", year: 1975 },\r\n];\r\n\r\nconst MyAutoComplete = () => {\r\n  // const defaultProps = {\r\n  //   options: top100Films,\r\n  //   getOptionLabel: (option) => `${option.year} : ${option.title}`,\r\n  // };\r\n\r\n  const [value, setValue] = useState(null);\r\n  const [multipleValue, setMultipleValue] = useState([]);\r\n\r\n  const top100Films10Year = top100Films.map((item) => {\r\n    const year10 = item.year - (item.year % 10);\r\n    return {\r\n      ...item,\r\n      year10,\r\n    };\r\n  });\r\n\r\n  const myFilter = (item, inputValue) => {\r\n    if (inputValue === \"\") return true;\r\n    return item.title.includes(inputValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>{value ? value.title : null}</p>\r\n      <Stack spacing={1} sx={{ width: 300, marginLeft: 5 }}>\r\n        <Autocomplete\r\n          /* group */\r\n          options={top100Films10Year.sort((a, b) => a.year10 - b.year10)}\r\n          groupBy={(option) => option.year10}\r\n          getOptionLabel={(option) => option.title}\r\n\r\n          /* filter */\r\n          filterOptions={(list, input) =>\r\n            list.filter((item) => myFilter(item, input.inputValue))\r\n          }\r\n\r\n          id=\"auto-complete\"\r\n          autoComplete\r\n          includeInputInList\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"목록\" variant=\"standard\" />\r\n          )}\r\n        />\r\n      </Stack>\r\n      <hr style={{borderColor: \"black\"}} />\r\n      <Autocomplete\r\n        multiple\r\n        id=\"tags-outlined\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        //defaultValue={[top100Films[13]]}\r\n        filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"filterSelectedOptions\"\r\n            placeholder=\"Favorites\"\r\n          />\r\n        )}\r\n        onChange={(event, newValue) => {\r\n          const util = require(\"util\");\r\n          let str = newValue.map((data) => {\r\n            if (typeof data === \"object\") {\r\n              return util.inspect(data);\r\n            }\r\n            return data;\r\n          });\r\n\r\n          console.log(str);\r\n          setMultipleValue(str);\r\n        }}\r\n      />\r\n      <p>{multipleValue}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAutoComplete;\r\n","import React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst LoadingBar = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    bgcolor: \"rgba(255,255,255,0.5)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n\r\n  function asyncFunction() {\r\n    return new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        resolve();\r\n      }, 3000);\r\n    });\r\n  }\r\n\r\n  const test = () => {\r\n    setOpen(true);\r\n    asyncFunction().then(() => setOpen(false));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={test}>Async function</Button>\r\n      <Modal\r\n        open={open}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <CircularProgress />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingBar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// Toast UI Editor\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\"; // Viewer css\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport Viewer from \"@toast-ui/editor/dist/toastui-editor-viewer\";\r\n\r\n// Dark Theme 적용\r\n// import '@toast-ui/editor/dist/toastui-editor.css';\r\n// import '@toast-ui/editor/dist/theme/toastui-editor-dark.css';\r\n\r\n// Color Syntax Plugin\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\n\r\n// Table Merged Cell Plugin\r\nimport \"@toast-ui/editor-plugin-table-merged-cell/dist/toastui-editor-plugin-table-merged-cell.css\";\r\nimport tableMergedCell from \"@toast-ui/editor-plugin-table-merged-cell\";\r\n\r\nconst colorSyntaxOptions = {\r\n  preset: [\r\n    \"#333333\", \"#666666\", \"#FFFFFF\", \"#EE2323\", \"#F89009\", \"#009A87\", \"#006DD7\", \"#8A3DB6\",\r\n    \"#781B33\", \"#5733B1\", \"#953B34\", \"#FFC1C8\", \"#FFC9AF\", \"#9FEEC3\", \"#99CEFA\", \"#C1BEF9\",\r\n  ],\r\n};\r\n\r\nconst CONTENT_KEY = \"CONTENT_KEY\";\r\n\r\nconst ToastEditor = () => {\r\n  const editorRef = useRef(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  let initData = `# 제목\r\n\r\n  ***~~<span style=\"color: #EE2323\">내용</span>~~***\r\n  \r\n  * [x] 체크박스\r\n  * [ ] 체크박스 2`;\r\n\r\n  const handleSave = () => {\r\n    let markDownContent = editorRef.current.getInstance().getMarkdown();\r\n    //let htmlContent = editorRef.current.getInstance().getHTML();\r\n    console.log(markDownContent);\r\n    localStorage.setItem(CONTENT_KEY, markDownContent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let item = localStorage.getItem(CONTENT_KEY);\r\n    \r\n    if (editMode === false) {\r\n      const viewer = new Viewer({\r\n        el: document.querySelector(\".toast-editor-viewer\"),\r\n        viewer: true,\r\n        height: \"400px\",\r\n        usageStatistics: false, // 통계 수집 거부\r\n        plugins: [tableMergedCell],\r\n      });\r\n\r\n      if(item) viewer.setMarkdown(item);\r\n      else viewer.setMarkdown(initData);\r\n    }\r\n\r\n    if (item) {\r\n      if (editorRef.current) editorRef.current.getInstance().setMarkdown(item);\r\n    } else {\r\n      \r\n      if (editorRef.current) editorRef.current.getInstance().setMarkdown(initData);\r\n    }\r\n  }, [editMode]);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <h1>Toast UI Editor</h1>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          sx={{ m: 1 }}\r\n          onClick={() => setEditMode(!editMode)}\r\n        >\r\n          {editMode ? \"취소하기\" : \"편집하기\"}\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ m: 1 }}\r\n          onClick={handleSave}\r\n          disabled={editMode === false}\r\n        >\r\n          저장하기\r\n        </Button>\r\n\r\n        {editMode === false && <div className=\"toast-editor-viewer\"></div>}\r\n\r\n        {editMode === true && (\r\n          <Editor\r\n            ref={editorRef}\r\n            // initialValue={initContents}\r\n            height=\"400px\"\r\n            placeholder=\"Please Enter Text.\"\r\n            previewStyle=\"tab\" // or vertical\r\n            initialEditType=\"wysiwyg\" // or markdown\r\n            // hideModeSwitch={true} // 하단 숨기기\r\n            toolbarItems={[\r\n              // 툴바 옵션 설정\r\n              [\"heading\", \"bold\", \"italic\", \"strike\"],\r\n              [\"hr\", \"quote\"],\r\n              [\"ul\", \"ol\", \"task\", \"indent\", \"outdent\"],\r\n              [\"table\", /* \"image\", */ \"link\"],\r\n              [\"code\", \"codeblock\"],\r\n            ]}\r\n            //theme=\"dark\"\r\n            //useCommandShortcut={false} // 키보드 입력 컨트롤 방지 ex ctrl z 등\r\n            usageStatistics={false} // 통계 수집 거부\r\n            plugins={[[colorSyntax, colorSyntaxOptions], tableMergedCell]}\r\n          />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToastEditor;","import React, { useEffect } from \"react\";\r\n\r\nimport Handsontable from \"handsontable\";\r\nimport \"handsontable/dist/handsontable.full.min.css\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst data = [\r\n  [\"\", \"Tesla\", \"Nissan\", \"Toyota\", \"Honda\", \"Mazda\", \"Ford\"],\r\n  [\"2017\", 10, 11, 12, 13, 15, 16],\r\n  [\"2018\", 10, 11, 12, 13, 15, 16],\r\n  [\"2019\", 10, 11, 12, 13, 15, 16],\r\n  [\"2020\", 10, 11, 12, 13, 15, 16],\r\n  [\"2021\", 10, 11, 12, 13, 15, 16],\r\n];\r\n\r\nconst initData = () => {\r\n  let row = [];\r\n  for (let i = 0; i < 100; i++) {\r\n    row.push(String.fromCharCode(\"A\".charCodeAt() + (i % 26)));\r\n  }\r\n\r\n  let table = [];\r\n  for (let k = 0; k < 100; k++) {\r\n    let tmp = JSON.parse(JSON.stringify(row));\r\n    let number = `${k + 1}`;\r\n    for (let i = 0; i < 100; i++)\r\n      tmp[i] = `${tmp[i]}${number.padStart(3, \"0\")}`;\r\n    table.push(tmp);\r\n  }\r\n\r\n  return table;\r\n};\r\n\r\nconst myAfterChangesObserved = (instance, row, col, value, result) => {\r\n  console.log(instance, row, col, value, result);\r\n};\r\n\r\n// 최적화 https://handsontable.com/docs/6.2.2/tutorial-good-practices.html\r\n// useState 예시 https://handsontable.com/docs/6.2.2/frameworks-wrapper-for-react-simple-examples.html\r\n\r\nlet searchResultCount = 0;\r\nfunction searchResultCounter(instance, row, col, value, result) {\r\n  const DEFAULT_CALLBACK = function(instance, row, col, data, testResult) {\r\n    instance.getCellMeta(row, col).isSearchResult = testResult;\r\n  };\r\n\r\n  DEFAULT_CALLBACK.apply(this, arguments);\r\n\r\n  if (result) {\r\n    searchResultCount++;\r\n  }\r\n}\r\n\r\nfunction redRenderer(instance, td) {\r\n  Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n  td.style.backgroundColor = \"red\";\r\n}\r\n\r\nconst options = {\r\n  data: initData(),\r\n\r\n  /* true or false options */\r\n  colHeaders: true /* column header는 보이게 설정 [\"Brand\", \"Model\", \"Code name\", \"Country of origin\", \"Rank\"], */,\r\n  rowHeaders: true /* row header 보이게 설정 */,\r\n  wordWrap: false /* 줄 바꿈 x */,\r\n  manualColumnResize: true /* column 사이즈 조절 */,\r\n  manualRowResize: true /* row 사이즈 조절 */,\r\n  manualColumnMove: true /* column move 허용 */,\r\n  manualRowMove: true /* row move 허용 */,\r\n  manualColumnFreeze: true /* freezeColumn 메뉴 생성 */,\r\n  contextMenu: true /* cell 클릭 시 메뉴 설정 */,\r\n  persistentState: true, // save? 잘 안됨\r\n  //outsideClickDeselects: false,\r\n  //filters: true /* 필터 기능 on 6.2.2 pro  */,\r\n  //dropdownMenu: true /* dropdown 메뉴 설정 6.2.2 pro */,\r\n  //readOnly: true, // 전체 적용\r\n\r\n  observeChanges: true,\r\n  afterChangesObserved: myAfterChangesObserved,\r\n  afterChange: function(change, source) {\r\n    console.log(change, source);\r\n    //change [row, col, before, after];\r\n  },\r\n\r\n  /* 다중 옵션 */\r\n\r\n  //fillHandle : false, 자동 채움, vertical, horizontal\r\n  //fillHandle : \"vertical\",\r\n  stretchH: \"all\", // last, none\r\n  //className: \"htMiddle htCenter\",\r\n  selectionMode: \"multiple\", // 'single', 'range' or 'multiple'\r\n\r\n\r\n\r\n\r\n  /* Number Options */\r\n\r\n  startRows: 3, // 빈 데이터인 경우,\r\n  startCols: 5, // 빈 데이터인 경우,\r\n  width: 1000,\r\n  height: 1000,\r\n\r\n  minSpareRows: 2, // 빈 행 추가 자동 생성\r\n  minSpareCols: 2, // 빈 행 추가\r\n  fixedColumnsLeft: 2,\r\n  // fixedRowsTop: 3,\r\n  fixedRowsBottom: 2,\r\n  fixedColumnsStart: 5,\r\n  \r\n  \r\n  /* Customizing Options */\r\n  colWidths: 30, //[]\r\n  rowHeights : 50,//[]\r\n\r\n  \r\n    // columnSorting: {\r\n  //   sortEmptyCells: true,\r\n  //   initialConfig: {\r\n  //     column: 2,\r\n  //     sortOrder: 'asc'\r\n  //   }\r\n  // },\r\n\r\n\r\n  search: {\r\n    callback: searchResultCounter,\r\n    //queryMethod: myNewQueryMethod,\r\n    //searchResultClass: 'customClass'\r\n  },\r\n\r\n\r\n  // columns: [\r\n  //     {data: \"id\", type: 'numeric'},\r\n  //     // 'text' is default, you don't actually need to declare it\r\n  //     //{data: \"name\", renderer: yellowRenderer},\r\n  //     // use default 'text' cell type but overwrite its renderer with yellowRenderer\r\n  //     {data: \"isActive\", type: 'checkbox'},\r\n  //     {data: \"date\", type: 'date', dateFormat: 'YYYY-MM-DD'},\r\n  //     {data: \"color\",\r\n  //       type: 'autocomplete', // dropdown\r\n  //       source: [\"yellow\", \"red\", \"orange\", \"green\", \"blue\", \"gray\", \"black\", \"white\"]\r\n  //     },\r\n  //     {\r\n  //       editor: 'select',\r\n  //       selectOptions: ['Kia', 'Nissan', 'Toyota', 'Honda']\r\n  //     },\r\n  //   ],\r\n\r\n  // cell: [\r\n  //   {row: 0, col: 0, readOnly: true}\r\n  // ],\r\n\r\n  cells: function(row, col, prop) {\r\n    var cellProperties = {};\r\n\r\n    if (row === 0 && col === 0) {\r\n      cellProperties.readOnly = true;\r\n      cellProperties.background = \"red\";\r\n      cellProperties.className = \"htCenter htMiddle\";\r\n      cellProperties.renderer = redRenderer; //함수화 해보기\r\n    }\r\n\r\n    if (col === 5) {\r\n      this.type = \"dropdown\";\r\n      this.source = [\"a\", \"b\", \"c\"];\r\n    }\r\n\r\n    return cellProperties;\r\n  },\r\n\r\n  licenseKey: \"non-commercial-and-evaluation\",\r\n};\r\n\r\nconst CustomHansOnTable = ({ data, customOptions }) => {\r\n  options.manualColumnMove = false;\r\n  const makeTable = () => {\r\n    const container = document.getElementById(\"hot-app\");\r\n    container.innerHTML = \"\";\r\n    const myTable = new Handsontable(container, options);\r\n    //myTable.helper.createSpreadsheetData(6, 10);\r\n    myTable.render();\r\n    myTable.selectAll();\r\n\r\n    return;\r\n    let searchFiled4 = document.getElementById(\"search_field4\");\r\n    let resultCount = document.getElementById(\"resultCount\");\r\n\r\n    Handsontable.dom.addEvent(searchFiled4, \"keyup\", function(event) {\r\n      searchResultCount = 0;\r\n\r\n      var search = myTable.getPlugin(\"search\");\r\n      var queryResult = search.query(this.value);\r\n\r\n      console.log(queryResult);\r\n      resultCount.innerText = searchResultCount.toString();\r\n      myTable.render();\r\n      myTable.getDataAtCell(0, 1);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeTable();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <input id=\"search_field4\" type=\"search\" placeholder=\"Search\" />\r\n        <p>\r\n          <span id=\"resultCount\">1</span> results\r\n        </p>\r\n        <div id=\"hot-app\"></div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomHansOnTable;\r\n","import React from \"react\";\r\nimport CustomHansOnTable from \"./CustomHansOnTable\";\r\n\r\nconst MyHandsonTable = () => {\r\n  return (\r\n    <div>\r\n      zzzz\r\n      <div>\r\n        <CustomHansOnTable />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyHandsonTable;\r\n","import React from 'react';\nimport { Route, Link, Routes } from \"react-router-dom\";\n\nimport './App.css';\n\nimport ButtonTest from \"./page/ButtonTest\";\nimport MaterialTable from \"./page/MaterialTable\";\nimport TreeViewExample from \"./page/TreeViewExample\";\nimport TreeViewExample2 from \"./page/TreeViewExample2\";\nimport { useEffect, useState } from \"react\";\nimport FileBrowser from \"./page/FileBrowser\";\nimport MyAutoComplete from \"./page/MyAutoComplete\";\nimport LoadingBar from \"./page/LoadingBar\";\nimport ToastEditor from './page/ToastEditor';\nimport MyHandsonTable from './page/MyHandsonTable';\n\nconst useTitle = (initialTitle) => {\n  const [title, setTitle] = useState(initialTitle);\n  const updateTitle = () => {\n    const htmlTitle = document.querySelector(\"title\");\n    htmlTitle.innerText = title;\n  };\n  useEffect(updateTitle, [title]);\n  return setTitle;\n}\n\nconst App = () => {\n  const titleUpdator = useTitle(\"Loading...\");\n  setTimeout(() => titleUpdator(\"Home\"), 1000);\n\n  return (\n    <div className=\"App\">\n      <div className=\"router\">\n        <span>\n          <Link to=\"/btn\">Button Test</Link>\n        </span>\n        <span>\n          <Link to=\"/mtable\">Material Table</Link>\n        </span>\n        <span>\n          <Link to=\"/tvexp\">Tree View</Link>\n        </span>\n        <span>\n          <Link to=\"/tvexp2\">Tree View 2</Link>\n        </span>\n        <span>\n          <Link to=\"/fileBrowser\">FileBrowser</Link>\n        </span>\n        <span>\n          <Link to=\"/autoComplete\">Auto Complete</Link>\n        </span>\n        <span>\n          <Link to=\"/loadingBar\">Loading</Link>\n        </span>\n        <span>\n          <Link to=\"/toastEditor\">Toast UI Editor</Link>\n        </span>\n        <span>\n          <Link to=\"/myHandsTable\">HandsOnTable</Link>\n        </span>\n      </div>\n      <div>\n        <Routes>\n          <Route path=\"/btn\" element={<ButtonTest />} />\n          <Route path=\"/mtable\" element={<MaterialTable />} />\n          <Route path=\"/tvexp\" element={<TreeViewExample />} />\n          <Route path=\"/tvexp2\" element={<TreeViewExample2 />} />\n          <Route path=\"/fileBrowser\" element={<FileBrowser />} />\n          <Route path=\"/autoComplete\" element={<MyAutoComplete />} />\n          <Route path=\"/loadingBar\" element={<LoadingBar />} />\n          <Route path=\"/toastEditor\" element={<ToastEditor />} />\n          <Route path=\"/myHandsTable\" element={<MyHandsonTable />} />\n        \n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}